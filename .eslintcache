[{"/Users/sloane/Documents/Code/Portfolio-App/src/index.js":"1","/Users/sloane/Documents/Code/Portfolio-App/src/reportWebVitals.js":"2","/Users/sloane/Documents/Code/Portfolio-App/src/projects/Blokus.js":"3","/Users/sloane/Documents/Code/Portfolio-App/src/projects/Chomp.js":"4","/Users/sloane/Documents/Code/Portfolio-App/src/projects/PathFinding.js":"5","/Users/sloane/Documents/Code/Portfolio-App/src/Home.js":"6","/Users/sloane/Documents/Code/Portfolio-App/src/components/Navbar.js":"7","/Users/sloane/Documents/Code/Portfolio-App/src/components/AboutMe.js":"8","/Users/sloane/Documents/Code/Portfolio-App/src/components/Experience.js":"9","/Users/sloane/Documents/Code/Portfolio-App/src/components/Services.js":"10","/Users/sloane/Documents/Code/Portfolio-App/src/components/Contacts.js":"11","/Users/sloane/Documents/Code/Portfolio-App/src/components/Testimonials.js":"12","/Users/sloane/Documents/Code/Portfolio-App/src/components/Portfolio.js":"13","/Users/sloane/Documents/Code/Portfolio-App/src/components/Footer.js":"14","/Users/sloane/Documents/Code/Portfolio-App/src/components/Header.js":"15","/Users/sloane/Documents/Code/Portfolio-App/src/components/TestimonialsCarousel.js":"16","/Users/sloane/Documents/Code/Portfolio-App/src/components/Display.js":"17","/Users/sloane/Documents/Code/Portfolio-App/src/App.js":"18","/Users/sloane/Documents/Code/Portfolio-App/src/App.test.js":"19","/Users/sloane/Documents/Code/Portfolio-App/src/components/DynamicSection.js":"20","/Users/sloane/Documents/Code/Portfolio-App/src/projects/ToDoList.js":"21","/Users/sloane/Documents/Code/Portfolio-App/src/projects/pathfinding/GUI.js":"22","/Users/sloane/Documents/Code/Portfolio-App/src/projects/pathfinding/Grid.js":"23","/Users/sloane/Documents/Code/Portfolio-App/src/projects/pathfinding/Search_Solution_OBS.js":"24","/Users/sloane/Documents/Code/Portfolio-App/src/projects/pathfinding/BinaryHeap.js":"25","/Users/sloane/Documents/Code/Portfolio-App/src/projects/pathfinding/GridGUI.js":"26","/Users/sloane/Documents/Code/Portfolio-App/src/projects/pathfinding/Search_Student.js":"27","/Users/sloane/Documents/Code/Portfolio-App/src/setupTests.js":"28","/Users/sloane/Documents/Code/Portfolio-App/src/projects/pathfinding/Search_Student_JPS.js":"29"},{"size":1071,"mtime":1610315777609,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":1609989163836,"results":"32","hashOfConfig":"31"},{"size":4264,"mtime":1610306936529,"results":"33","hashOfConfig":"31"},{"size":2076,"mtime":1609989163835,"results":"34","hashOfConfig":"31"},{"size":22883,"mtime":1609989163835,"results":"35","hashOfConfig":"31"},{"size":6169,"mtime":1610332650288,"results":"36","hashOfConfig":"31"},{"size":2222,"mtime":1609989163769,"results":"37","hashOfConfig":"31"},{"size":853,"mtime":1609989163769,"results":"38","hashOfConfig":"31"},{"size":4441,"mtime":1609989163769,"results":"39","hashOfConfig":"31"},{"size":1908,"mtime":1609989163770,"results":"40","hashOfConfig":"31"},{"size":5257,"mtime":1609989163769,"results":"41","hashOfConfig":"31"},{"size":403,"mtime":1609989163770,"results":"42","hashOfConfig":"31"},{"size":6502,"mtime":1609989163769,"results":"43","hashOfConfig":"31"},{"size":2876,"mtime":1610306592800,"results":"44","hashOfConfig":"31"},{"size":1615,"mtime":1610314026620,"results":"45","hashOfConfig":"31"},{"size":1904,"mtime":1609989163770,"results":"46","hashOfConfig":"31"},{"size":1958,"mtime":1610315673389,"results":"47","hashOfConfig":"31"},{"size":320,"mtime":1609989163769,"results":"48","hashOfConfig":"31"},{"size":246,"mtime":1609989163769,"results":"49","hashOfConfig":"31"},{"size":0,"mtime":1610332336252,"results":"50","hashOfConfig":"31"},{"size":431,"mtime":1609989163835,"results":"51","hashOfConfig":"31"},{"size":3380,"mtime":1609989163835,"results":"52","hashOfConfig":"31"},{"size":371,"mtime":1609989163835,"results":"53","hashOfConfig":"31"},{"size":15227,"mtime":1609989163835,"results":"54","hashOfConfig":"31"},{"size":4119,"mtime":1609989163835,"results":"55","hashOfConfig":"31"},{"size":24386,"mtime":1609989163835,"results":"56","hashOfConfig":"31"},{"size":11776,"mtime":1609989163835,"results":"57","hashOfConfig":"31"},{"size":241,"mtime":1609989163837,"results":"58","hashOfConfig":"31"},{"size":18692,"mtime":1609989163835,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"yokz9n",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":1,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"62"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"62"},{"filePath":"129","messages":"130","errorCount":34,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"62"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"62"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"137","messages":"138","errorCount":1,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"62"},"/Users/sloane/Documents/Code/Portfolio-App/src/index.js",[],["140","141"],"/Users/sloane/Documents/Code/Portfolio-App/src/reportWebVitals.js",[],"/Users/sloane/Documents/Code/Portfolio-App/src/projects/Blokus.js",["142","143","144","145","146","147"],"import React from 'react'\nimport '../App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {faArrowRight}from \"@fortawesome/free-solid-svg-icons\";\nimport Navbar from \"../components/Navbar\";\nimport ImgMainMenu from \"../images/Blokus/Main menu.PNG\";\nimport ImgSettingMenu from \"../images/Blokus/settingMenu.PNG\";\nimport ImgGamePlay from \"../images/Blokus/gamePlay.PNG\";\nimport ImgScore    from \"../images/Blokus/score.PNG\";\nfunction Blokus () {\n    return (\n        <>\n            <Navbar />\n\n            <Carousel\n                showArrows={true}\n                infiniteLoop={false}\n                showThumbs={true}\n                showStatus={true}\n                autoPlay={false}\n                interval={3000}\n            >\n            \n            <div class=\"container\" className = \"project-carousel\">\n                <div class=\"section-header text-center\" > \n                    <h1 class=\"title\">Blokus</h1> \n                    <h4>Source Code <a href = \"https://github.com/YimiaoZhang/Blokus\">github</a> </h4>\n             \n                </div>\n                <h3>Introduction</h3>  \n                <p>Blokus is an abstract strategy board game for two to four players, where players try to score points by occupying most of the board with pieces of their colour. It was invented by Bernard Tavitian and first released in 2000 by Sekkoïa, a French company. It has won several awards, including the Mensa Select award and the 2004 Teacher's Choice Award. In 2009, the game was sold to Mattel.</p>\n                <h3>GamePlay</h3> \n                <p>The game is played on a square board divided into 20 rows and 20 columns, for a total of 400 squares. There are a total of 84 game tiles, organized into 21 shapes in each of four colors: blue, yellow, red and green. The 21 shapes are based on free polyominoes of from one to five squares (one monomino, one domino, two trominoes/triominoes, five tetrominoes, and 12 pentominoes). The standard rules of play for all variations of the game are as follows:\n                <li>Order of play is based on the color of pieces: blue, yellow, red, green.</li>\n                <li>The first piece played of each color is placed in one of the board's four corners. Each new piece played must be placed so that it touches at least one piece of the same color, with only corner-to-corner contact allowed—edges cannot touch. However, edge-to-edge contact is allowed when two pieces of different color are involved.</li>\n                <li>When a player cannot place a piece, he or she passes, and play continues as normal. The game ends when no one can place a piece.</li>\n                    When a game ends, the player with the highest score wins. The score is based on the number of squares in each player's pieces on the board (e.g. a tetromino is worth 4 points). A player who played all of his or her pieces is awarded a +20 point bonus if the last piece played was a monomino, or a +15 point bonus for any other piece.</p>\n                <a href = \"../resources/Blokus Instructions.pdf\" download>View Blokus Instructions</a>\n                \n\n                <div class=\"section-header\"> \n                    <h5 class=\"section md-padding \">Main Menu</h5>\n                    <img src = {ImgMainMenu} class=\"section md-padding bg-grey\" />\n                </div>\n                \n                <div class=\"section-header \">\n                    <h5 class=\"section md-padding \">Setting Menu</h5>\n                    <img src = {ImgSettingMenu} class=\"section md-padding bg-grey\" />\n                </div>\n                <div class=\"section-header \">\n                    <h5 class=\"section md-padding \">Gameplay</h5>\n                    <img src = {ImgGamePlay} class=\"section md-padding bg-grey\" />\n                </div>\n                <div class=\"section-header \">\n                    <h5 class=\"section md-padding \">Score</h5>\n                    <img src = {ImgScore} class=\"section md-padding bg-grey\" />\n                </div>\n            </div>\n            <div></div>\n        \n            </Carousel>\n            \n        </>\n    );\n}\n\nexport default Blokus\n","/Users/sloane/Documents/Code/Portfolio-App/src/projects/Chomp.js",["148","149","150","151","152"],"import React from 'react'\nimport '../App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {faArrowRight}from \"@fortawesome/free-solid-svg-icons\";\nimport Navbar from \"../components/Navbar\";\nimport ImgGamePlay from\"../images/Chomp/gameplay.PNG\";\n\nfunction Chomp() {\n    return (\n        <div id=\"portfolio\" class=\"section md-padding bg-grey\">\n\n        \n        <div class=\"container\">\n          <div class=\"section-header text-center\">\n            <h1 class=\"title\">Chomp</h1>\n            <h4>Source Code <a href = \"https://github.com/YimiaoZhang/Chomp\">github</a> </h4>\n          </div>\n          <p>A java program that lets user play the game of Chomp against the computer</p>\n          <h3>Game Introduction</h3>\n          <p>Chomp is a two-player strategy game played on a rectangular chocolate bar made up of smaller square blocks (cells). The players take it in turns to choose one block and \"eat it\" (remove from the board), together with those that are below it and to its right. The top left block is \"poisoned\" and the player who eats this loses.</p>\n          \n          <h3>Instruction</h3>\n          <p>1. open the console</p>\n          <p>2. compile the code: javac *.java</p>\n          <p>3. run the code: java Game</p>\n          <h3>Game Instructions</h3> \n          <p>The program randomly decides who(user or computer) goes first. The game informs user when it's user's turn. </p>\n          <p>1. Select a piece of chocolate, then all the chocolate below and to the right will be gone. </p>\n              \n              <p>2. Computer will select a piece of chocolate.</p>\n              <p>3. The player who eats the top left block loses.</p>\n\n          \n          <div class=\"section-header text-center\">\n            <h5 class=\"section md-padding bg-grey\">Screenshots</h5>\n            <img src = {ImgGamePlay} class=\"section md-padding bg-grey\" />\n          </div>\n  \n        </div>\n        </div>\n    )\n}\n\nexport default Chomp\n","/Users/sloane/Documents/Code/Portfolio-App/src/projects/PathFinding.js",["153","154","155","156","157","158","159"],"import React from 'react'\nimport '../App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {faArrowRight}from \"@fortawesome/free-solid-svg-icons\";\nimport Navbar from \"../components/Navbar\";\n\n// Images \nimport sampleStates from \"../images/pathfinding/sampleStates.PNG\";\nimport Img00 from \"../images/pathfinding/00.PNG\";\nimport Img01 from \"../images/pathfinding/01.png\";\nimport Img02 from \"../images/pathfinding/02.png\";\nimport Img03 from \"../images/pathfinding/03.png\";\nimport Img04 from \"../images/pathfinding/04.png\";\nimport Img05 from \"../images/pathfinding/05.png\";\nimport Img06 from \"../images/pathfinding/06.png\";\nimport Img07 from \"../images/pathfinding/07.png\";\nimport Img08 from \"../images/pathfinding/08.png\";\nimport Img09 from \"../images/pathfinding/09.png\";\nimport Img10 from \"../images/pathfinding/10.png\";\nimport Img11 from \"../images/pathfinding/11.png\";\nimport Img12 from \"../images/pathfinding/12.png\";\nimport Img13 from \"../images/pathfinding/13.png\";\nimport Img14 from \"../images/pathfinding/14.png\";\nimport Img15 from \"../images/pathfinding/15.png\";\nimport Img16 from \"../images/pathfinding/16.png\";\nimport Img17 from \"../images/pathfinding/17.png\";\nimport Img18 from \"../images/pathfinding/18.png\";\nimport Img19 from \"../images/pathfinding/19.png\";\nfunction PathFinding() {\n    return (\n    <div id=\"portfolio\" class=\"section md-padding bg-grey\">\n\n      <div class=\"container\">\n        {/* Title */}\n        <div class=\"section-header text-center\">\n            <h1 class=\"title\">Improve A * search Algorithm using Jump Point Search</h1>\n            <h4><a href = \"#../projects/pathfinding/index.html\">pathfinding project online</a></h4>\n            <h4>Source Code <a href = \"https://github.com/YimiaoZhang/JPS-pathfinding\">github</a> </h4>\n        </div>\n\n        {/* Paragraph */}\n        <div className = \"paragraph\">\n            <h3>Introduction</h3>\n            <p>This project aims to optimize the A* search algorithm using Jump Point Search and applied the algorithm to larger maps. We are going to test that JPS can reduce memory and improve speed for A* search algorithm on uniform-cost grid map.</p>\n            <p>There are certain drawbacks of A* search algorithm, it needs to visits every neighbor around the parent node and do all the evaluation to every single node which leads to slowness and increased memory. The Jump Point Search algorithm can be used to reduce processing time and decrease memory.</p>\n        </div>\n\n        {/* Paragraph */}\n        <div className = \"paragraph\">\n            <h3>Problem Description</h3>\n            <p>A* search algorithm is an algorithm that starts from a specific node of a graph and aims to find a path with the smallest cost to reach the goal node. It is implemented by generating a tree of paths from the start node and extend paths at each iteration. But there are drawbacks of the A* search algorithm, it needs to visits every neighbour around the parent node and do all the evaluation to every single node which leads to slowness and increased memory.</p> \n            <p>Jump Point Search is an optimization to the A* search algorithm for uniform-cost grids which speeds up pathfinding by “jumping over” many locations that would not be considered. The optimization is done by reducing the symmetries in the search and eliminating certain nodes that can be made about the current node’s neighbours when specific conditions are satisfied. Instead of grabbing every neighbour around the node being expanded and doing all the evaluation of them, Jump Point Search move along a direction recursively until finding a point of interest or meet an obstacle.</p>\n            <p>The environment of the problem is the uniform cost grid map. Every gird of the map represents a coordinate in the map. The goal state is to find the optimal path from the starting location to the ending location. Different colours of the grid represent different terrain of the map. The path can only go through the grids with the same colour. For example, when the colour of the start point is green, then the path can only go through green grids. Also, the path search is only permitted inside the map, searching outside the map is not allowed. This project allows the path searching to move in eight directions, the cost of the cardinal move is 100, and the cost of the diagonal move is 141.</p>\n            <div class=\"section-header text-center\">\n                <h5 class=\"section md-padding bg-grey\">Screenshots of sample states of the environment</h5>\n            <   img src = {sampleStates} class=\"section md-padding bg-grey\" />\n            </div>\n        </div>\n\n        {/* Paragraph */}\n        <div className = \"paragraph\">\n            <h3>Methodology</h3>\n            <p>Jump Point Search eliminates lots of intermediate nodes in certain kinds of grid combinations. It\n            skips nodes with those combinations that would otherwise be added to the open list and closed\n            list. It also saves the time of calculation and evaluation.</p>\n            <p>In Jump Point Search, you move along a direction recursively until you find a point of\n            importance or find an obstacle or off the map.</p>\n\n        </div>\n\n        {/* Paragraph */}\n        <div className = \"paragraph\">\n        <h3>Pruning rules for horizontal/vertical moves</h3>\n        <p>Prune all neighbours that can be reached optimally from other paths without going through the\n          current node. The green node on the example figure below is currently being expanded.</p>\n          <div class=\"container\">\n            <div class=\"row\">\n              \n              <div class=\"col-xs-12 col-md-6\">\n                <div class=\"about-text\">                 \n                  <p>On the map of the figure, the green node is\n                    moving to the right. There are certain\n                    neighbours of the node we can ignore.</p>                 \n                </div>\n              </div>\n              <div class=\"col-xs-12 col-md-6\"> <div class = \"fixedSmallImage\"><img src={Img01} class=\"img-responsive\" alt=\"\"/> </div></div>\n            </div>\n          </div>\n        \n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-xs-12 col-md-6\">\n                <div class=\"about-text\">\n                  <p>First, we prune the node of the parent.</p>\n                </div>\n              </div>\n              <div class=\"col-xs-12 col-md-6\"> <div class = \"fixedSmallImage\"><img src={Img02} class=\"img-responsive\" alt=\"\"/></div> </div>\n            </div>\n          </div>\n\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-xs-12 col-md-6\">\n                <div class=\"about-text\">\n                  <p>Then we can prune the nodes at the upper\n                    left and lower left. Because those nodes can\n                    be reached optimally from the parent of the\n                    green node without going through the green\n                    node.</p>\n                </div>\n              </div>\n              <div class=\"col-xs-12 col-md-6\"> <div class = \"fixedSmallImage\"><img src={Img03} class=\"img-responsive\" alt=\"\"/> </div></div>\n            </div>\n          </div>\n\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-xs-12 col-md-6\">\n                <div class=\"about-text\">\n                  <p>The nodes below and above can be reached\n                    optimally from the parent of the green node.\n                    The cost of the path from the parent node to\n                    the above node would be 2, but the cost of\n                    the path that goes through green node would\n                    be √2 . It is the same as the node below.\n                    Therefore, we can eliminate those nodes.</p>\n                </div>\n              </div>\n              <div class=\"col-xs-12 col-md-6\"> <div class = \"fixedSmallImage\"><img src={Img04} class=\"img-responsive\" alt=\"\"/> </div> </div>\n            </div>\n          </div>\n\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-xs-12 col-md-6\">\n                <div class=\"about-text\">\n                  <p>The node at the upper right of the green\n                    node and the node at the lower right of the\n                    green node can be reached from the\n                    neighbouring nodes above and below. The\n                    cost of going through neighbouring nodes\n                    and the cost of going through the green node\n                    are the same. We will assume the path going\n                    through neighbouring nodes is preferable\n                    and eliminate those nodes.</p>\n                </div>\n              </div>\n              <div class=\"col-xs-12 col-md-6\"> <div class =\"fixedSmallImage\"><img src={Img05} class=\"img-responsive\" alt=\"\"/></div></div>\n            </div>\n          </div>\n\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-xs-12 col-md-6\">\n                <div class=\"about-text\">\n                  <p>Based on the previous evaluation, we\n                    assumed that the upper right node and lower\n                    right node of the green node could be\n                    accessed optimally through other paths. In\n                    this way, we do not have to add those nodes\n                    to the open list.</p>\n                </div>\n              </div>\n              <div class=\"col-xs-12 col-md-6\"> <div class = \"fixedSmallImage\"><img src={Img06} class=\"img-responsive\" alt=\"\"/> </div></div>\n            </div>\n          </div>\n        </div>\n\n        {/* Paragraph */}\n        <div className = \"paragraph\">\n        <h3>Pruning rules for diagonal moves:</h3>\n          <p>The principle of pruning for the diagonal moves is similar to the cardinal moves.</p>\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-xs-12 col-md-6\">\n                <div class=\"about-text\">\n                  <p>The node on the right map is moving\n                    diagonally.</p>\n                </div>\n              </div>\n              <div class=\"col-xs-12 col-md-6\"><div class = \"fixedSmallImage\"><img src={Img07} class=\"img-responsive\" alt=\"\"/></div> </div>\n            </div>\n          </div>\n\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-xs-12 col-md-6\">\n                <div class=\"about-text\">\n                  <p>We can assume that the left node and node\n                    below can be reached optimally through the\n                    parent of the green node.</p>\n                </div>\n              </div>\n              <div class=\"col-xs-12 col-md-6\"><div class = \"fixedSmallImage\">  <img src={Img08} class=\"img-responsive\" alt=\"\"/></div> </div>\n            </div>\n          </div>\n\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-xs-12 col-md-6\">\n                <div class=\"about-text\">\n                  <p>We can make assumption that the upper left\n                    node and the lower right node can be\n                    reached more optimal through neighbours\n                    rather than goes through the green node.</p>\n                </div>\n              </div>\n              <div class=\"col-xs-12 col-md-6\"><div class = \"fixedSmallImage\">  <img src={Img09} class=\"img-responsive\" alt=\"\"/> </div></div>\n            </div>\n          </div>\n\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-xs-12 col-md-6\">\n                <div class=\"about-text\">\n                  <p>Then we need only consider the following 3\n                    neighbours: the node above, the upper right\n                    node and the node on the right.</p>\n                </div>\n              </div>\n              <div class=\"col-xs-12 col-md-6\"> <div class = \"fixedSmallImage\"><img src={Img10} class=\"img-responsive\" alt=\"\"/> </div></div>\n            </div>\n          </div>\n        </div>        \n          \n        {/* Paragraph */}\n        <div className = \"paragraph\">\n            <h3>Forced Neighbours</h3>\n            <p>In some cases, the searching path will encounter some obstacles. The forced neighbour is the\n                node we are forced to consider, which would have otherwise ignored it.</p>\n            <div class=\"container\">\n                <div class=\"row\">\n                <div class=\"col-xs-12 col-md-6\">\n                    <div class=\"about-text\">\n                    <p>The green node on the right side is being\n                        expanded. The arrow states the travel\n                        direction. The black square is an obstacle to\n                        the green node. Other alternative optimal\n                        paths go through the parent of the green\n                        node are not able to be accessed. Then the\n                        red circle node cannot be pruned.</p>\n                    </div>\n                </div>\n                <div class=\"col-xs-12 col-md-6\"><div class = \"fixedSmallImage\"> <img src={Img11} class=\"img-responsive\" alt=\"\"/> </div></div>\n                </div>\n            </div>\n        </div>\n        \n        {/* Paragraph */}\n        <div className = \"paragraph\">\n            <h3>Pseudocode</h3>\n            <p/> Jump Point Search():\n            <br/>&emsp;closedList = [] \n            <br/>&emsp;openList = [startNode] \n            <br/>&emsp;While(true):\n            <br/>&emsp;If (openList is empty): return fail \n            <br/>&emsp;currentNode = openList[getMinIndex] //return the node with the smallest \n            heuristic value\n            <br/>&emsp;If (currentNode is goal) : return path \n            <br/>&emsp;If (currentNode is in closedList): continue \n            <br/>&emsp;closedList.add(currentNode) \n            <br/>&emsp;actions = IgnoreCertainActions(currentNode) \n            <br/>&emsp;cardinalSearch(currentNode, actions) \n            <br/>&emsp;diagonalSearch(currentNode, actions) \n            <br/>We implemented the JPS algorithm based on the A* algorithm. We use the\n            searchCardinal and searchDiagonal to avoid adding every node of every direction into the open\n            list. Implemented code can be found at Search_student_JPS.js file. \n        </div>\n\n        {/* Paragraph */}\n        <div className = \"paragraph\">\n            <h3>List of heuristics used</h3>\n            <p>• diagonal manhattan distance heuristic</p>\n            <p>• 4 directional (cardinal) manhattan distance</p>\n            <p>• 2D euclidian distance (Pythagoras)</p>\n            <p>• zero heuristic</p>\n        </div>\n            \n        {/* Paragraph */}\n        <div className = \"paragraph\">\n        <h3>Results & Discussion</h3>\n          <p>We used maps with different sizes to test the Jump Point Search, including maps given on\n            Assignment 2 and a larger map called “New Large Map”we added.\n            Example</p>\n          <p>Example results</p>\n          <div class=\"section-header text-center\">\n            <h3 class=\"section md-padding bg-grey\"></h3>\n            <img src = {Img00} class=\"section md-padding bg-grey\" />\n  \n          </div>\n          <p>Images below are single-step process of a JPS searching</p>\n          <p>The left white square is the starting point, and right white square is the goal. The\n            algorithm identified the yellow squares as interesting points. Then the algorithm used heuristic\n            function to identified the red squares as optimal and goes through the path. During the searching,\n            the algorithm finds new interesting points and optimal red squares. It continued the search until\n            the goal is in sight and find the optimal path.</p>\n          <p></p>\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-xs-12 col-md-6\"><div class = \"fixedImage\"> <img src={Img12} class=\"img-responsive\" alt=\"\"/> </div></div>\n              <div class=\"col-xs-12 col-md-6\"> <div class = \"fixedImage\"><img src={Img13} class=\"img-responsive\" alt=\"\"/></div> </div>\n            </div>\n          </div>\n\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-xs-12 col-md-6\"> <div class = \"fixedImage\"><img src={Img14} class=\"img-responsive\" alt=\"\"/></div> </div>\n              <div class=\"col-xs-12 col-md-6\"> <div class = \"fixedImage\"><img src={Img15} class=\"img-responsive\" alt=\"\"/> </div></div>\n            </div>\n          </div>\n\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-xs-12 col-md-6\"> <div class = \"fixedImage\"><img src={Img16} class=\"img-responsive\" alt=\"\"/> </div></div>\n              <div class=\"col-xs-12 col-md-6\"> <div class = \"fixedImage\"><img src={Img17} class=\"img-responsive\" alt=\"\"/> </div></div>\n            </div>\n          </div>\n\n          <p>We did a test on the larger map we created to prove that JPS is faster than A* search on\n            pathfinding. According to our tests, JPS performed better than A*. The table below contains 20\n            tests, including start point, goal point, heuristic function used, and running time of A* search\n            algorithm and Jump Point Search.</p>\n          \n           \n            <table class=\"tg\">\n              <tr>\n                <th class=\"tg-1wig\">Start Point</th>\n                <th class=\"tg-1wig\">Goal Point</th>\n                <th class=\"tg-1wig\">Heuristic Function</th>\n                <th class=\"tg-1wig\">Time(JPS)</th>\n                <th class=\"tg-1wig\">Time(A*)</th>\n              </tr>\n              <tr>\n                <td class=\"tg-0lax\">(280, 79)</td>\n                <td class=\"tg-0lax\">(36, 156)</td>\n                <td class=\"tg-0lax\">8 Direction Manhattan</td>\n                <td class=\"tg-0lax\">8.0</td>\n                <td class=\"tg-0lax\">58.0</td>\n              </tr>\n              <tr>\n                <td class=\"tg-0lax\">(240, 192)</td>\n                <td class=\"tg-0lax\">(167, 39)</td>\n                <td class=\"tg-0lax\">8 Direction Manhattan</td>\n                <td class=\"tg-0lax\">6.0</td>\n                <td class=\"tg-0lax\">35.0</td>\n              </tr>\n              <tr>\n                <td class=\"tg-0lax\">(178, 117)</td>\n                <td class=\"tg-0lax\">(292, 16)</td>\n                <td class=\"tg-0lax\">8 Direction Manhattan</td>\n                <td class=\"tg-0lax\">8.0</td>\n                <td class=\"tg-0lax\">41.0</td>\n              </tr>\n              <tr>\n                <td class=\"tg-0lax\">(9, 9)</td>\n                <td class=\"tg-0lax\">(246, 223)</td>\n                <td class=\"tg-0lax\">8 Direction Manhattan</td>\n                <td class=\"tg-0lax\">14.0</td>\n                <td class=\"tg-0lax\">56.0</td>\n              </tr>\n              <tr>\n                <td class=\"tg-0lax\">(278, 282)</td>\n                <td class=\"tg-0lax\">(14, 1)</td>\n                <td class=\"tg-0lax\">8 Direction Manhattan</td>\n                <td class=\"tg-0lax\">13.0</td>\n                <td class=\"tg-0lax\">72.0</td>\n              </tr>\n              <tr>\n                <td class=\"tg-0lax\">(150, 187)</td>\n                <td class=\"tg-0lax\">(295, 59)</td>\n                <td class=\"tg-0lax\">8 Direction Manhattan</td>\n                <td class=\"tg-0lax\">7.0</td>\n                <td class=\"tg-0lax\">32.0</td>\n              </tr>\n              <tr>\n                <td class=\"tg-0lax\">(296, 8)</td>\n                <td class=\"tg-0lax\">(245, 218)</td>\n                <td class=\"tg-0lax\">8 Direction Manhattan</td>\n                <td class=\"tg-0lax\">7.0</td>\n                <td class=\"tg-0lax\">20.0</td>\n              </tr>\n              <tr>\n                <td class=\"tg-0lax\">(299, 285)</td>\n                <td class=\"tg-0lax\">(144, 240)</td>\n                <td class=\"tg-0lax\">8 Direction Manhattan</td>\n                <td class=\"tg-0lax\">6.0</td>\n                <td class=\"tg-0lax\">26.0</td>\n              </tr>\n              <tr>\n                <td class=\"tg-0lax\">(185, 293)</td>\n                <td class=\"tg-0lax\">(82, 146)</td>\n                <td class=\"tg-0lax\">8 Direction Manhattan</td>\n                <td class=\"tg-0lax\">11.0</td>\n                <td class=\"tg-0lax\">35.0</td>\n              </tr>\n              <tr>\n                <td class=\"tg-0lax\">(5, 16)</td>\n                <td class=\"tg-0lax\">(245, 269)</td>\n                <td class=\"tg-0lax\">8 Direction Manhattan</td>\n                <td class=\"tg-0lax\">15.0</td>\n                <td class=\"tg-0lax\">55.0</td>\n              </tr>\n            </table>\n          <p>JPS is able to search path on larger maps faster than A* search since A* needs to check\n            many more nodes. We can clearly see that from the differences of two images below. The left\n            image using A* search algorithm has more red area which indicates more nodes has been\n            evaluated. The right image uses JPS, and it runs faster by reducing those nodes that need not be\n            considered.</p>\n\n            <div class=\"container\">\n              <div class=\"row\">\n                <div class=\"col-xs-12 col-md-6\"> <div class = \"fixedImage\"><img src={Img18} class=\"img-responsive\" alt=\"\"/> </div></div>\n                <div class=\"col-xs-12 col-md-6\"> <div class = \"fixedImage\"><img src={Img19} class=\"img-responsive\" alt=\"\"/> </div></div>\n              </div>\n            </div>  \n        </div>\n          \n        {/* Paragraph */}\n        <div className = \"paragraph\">\n        <h3>Conclusion</h3>\n            <p>We used the Jump Point Search to optimize the A* algorithm. The test result shows that\n              Jump Point Search improves the processing speed and reduces memory for A* algorithm. The\n              Jump Point Search selectively expands certain nodes of the map which reduces running time and\n              memory. Ignoring intermediate nodes between two jump points does not affect the resulting path\n              being optimal.</p>\n            <p>We found that Jump Point Search works better than A* search on larger maps. But for a\n              smaller map like the maze, Jump Point Search works not very well. The reason is that JPS is\n              inclined to find the forced neighbours, hence sometimes the path generated is around an obstacle.</p>\n            <p>If we have more time for the project, we will figure out a way of letting JPS works better.\n              For example, using different data structures to store the open list and closed list.</p>\n        </div>\n        </div>\n      </div>\n    )\n}\n\nexport default PathFinding\n","/Users/sloane/Documents/Code/Portfolio-App/src/Home.js",["160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188"],"import './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Particles from \"react-particles-js\";\nimport Header from \"./components/Header\";\nimport AboutMe from \"./components/AboutMe\";\nimport Services from \"./components/Services\";\nimport Experience from \"./components/Experience\";\nimport Portfolio from \"./components/Portfolio\";\nimport Testimonials from \"./components/Testimonials\";\nimport Contacts from \"./components/Contacts\";\nimport Footer from \"./components/Footer\";\nimport React, { Component, useEffect, useState, fetchData }from \"react\";\nimport Typed from \"react-typed\";\nimport { Link ,BrowserRouter, Route, Switch} from \"react-router-dom\"; \nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\nimport { Rectangle, Circle, Ellipse, Line, Polyline, CornerBox, Triangle} from 'react-shapes';\nimport { AwesomeButton, AwesomeButtonProgress, AwesomeButtonSocial} from 'react-awesome-button';\nimport \"react-awesome-button/dist/styles.css\";\nimport CurDisplay from \"./components/Display\";\n\nclass DynamicSection extends Component {\n    \n  constructor(props) {\n    super(props);\n    this.state = { module: null };\n  }\n  componentDidMount() {\n    const { path } = this.props;\n    import(`${path}`)\n      .then(module => this.setState({ module: module.default }))\n  }\n  render() {\n    const { module: Component } = this.state; // Assigning to new variable names @see: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\n    return(\n      <>\n      <Particles\n        className=\"particles-canvas\"\n        params={{\n          particles: {\n            number: {\n              value: 30,\n              density: {\n                enable: true,\n                value_area: 900\n              }\n            },\n            shape: {\n              type: \"circle\",\n              stroke: {\n                width: 6,\n                color: \"#f9ab00\"\n              }\n            }\n          }\n        }}\n      />\n\n    <div id=\"home\" className=\"header-wraper\">\n          <div class = \"container main-info row\" >\n              <div className = \"col-lg-2 col-md-2 col-sm-2 \">\n                <div className =\"col\" >\n                  <div className=\"col-lg-2 col-md-2 col-sm-2 main-menu-btn\">\n                    <Link to = \"/\" ><AwesomeButton type = \"primary\">Home</AwesomeButton></Link>\n                  </div>\n                  <div className=\"col-lg-2 col-md-2 col-sm-2 main-menu-btn\">\n                    <Link to =\"/education\" ><AwesomeButton  type=\"primary\" >Education</AwesomeButton></Link>\n                  </div>\n                  <div className=\"col-lg-2 col-md-2 col-sm-2 main-menu-btn\">\n                    <Link to =\"/skills\" ><AwesomeButton type=\"primary\" >Skills</AwesomeButton></Link>\n                  </div>\n                  <div className=\"col-lg-2 col-md-2 col-sm-2 main-menu-btn\">\n                  <Link to =\"/experience\" ><AwesomeButton type=\"primary\" >Experience</AwesomeButton></Link>\n                  </div>\n                  <div className=\"col-lg-2 col-md-2 col-sm-2 main-menu-btn\">\n                  <Link to =\"/portfolio\" ><AwesomeButton type=\"primary\" >Projects</AwesomeButton></Link>\n                  </div>\n                  <div className=\"col-lg-2 col-md-2 col-sm-2 main-menu-btn\">\n                  <Link to =\"/contacts\" ><AwesomeButton type=\"primary\" >Contact</AwesomeButton></Link>\n                  </div>\n                </div>\n              </div>\n\n              <div className = \"col-lg-10 col-md-10 col-sm-10 info-panel\">\n\n                {Component && <Component />}\n                \n              </div>\n          </div>       \n    </div>\n      \n\n    </>\n    )\n  }\n}\n\n\nfunction Home () {\n \n  //const [state , setState] = useState();\n  //useEffect(()=> {\n    //fetchData();\n  //}   , [prop, state]);\n  \n  //const { module: Component } = this.state; \n  return (\n    <>\n      <Particles\n        className=\"particles-canvas\"\n        params={{\n          particles: {\n            number: {\n              value: 30,\n              density: {\n                enable: true,\n                value_area: 900\n              }\n            },\n            shape: {\n              type: \"circle\",\n              stroke: {\n                width: 6,\n                color: \"#f9ab00\"\n              }\n            }\n          }\n        }}\n      />\n\n    <div id=\"home\" className=\"header-wraper\">\n          <div class = \"container main-info row\" >\n              <div className = \"col-lg-2 col-md-2 col-sm-2 \">\n                <div className =\"col\" >\n                  <div className=\"col-lg-2 col-md-2 col-sm-2 main-menu-btn\">\n                    <Link to = \"/\" ><AwesomeButton type = \"primary\">Home</AwesomeButton></Link>\n                  </div>\n                  <div className=\"col-lg-2 col-md-2 col-sm-2 main-menu-btn\">\n                    <Link to =\"/education\" ><AwesomeButton  type=\"primary\" >Education</AwesomeButton></Link>\n                  </div>\n                  <div className=\"col-lg-2 col-md-2 col-sm-2 main-menu-btn\">\n                    <Link to =\"/skills\" ><AwesomeButton type=\"primary\" >Skills</AwesomeButton></Link>\n                  </div>\n                  <div className=\"col-lg-2 col-md-2 col-sm-2 main-menu-btn\">\n                  <Link to =\"/experience\" ><AwesomeButton type=\"primary\" >Experience</AwesomeButton></Link>\n                  </div>\n                  <div className=\"col-lg-2 col-md-2 col-sm-2 main-menu-btn\">\n                  <Link to =\"/portfolio\" ><AwesomeButton type=\"primary\" >Projects</AwesomeButton></Link>\n                  </div>\n                  <div className=\"col-lg-2 col-md-2 col-sm-2 main-menu-btn\">\n                  <Link to =\"/contacts\" ><AwesomeButton type=\"primary\" >Contact</AwesomeButton></Link>\n                  </div>\n                </div>\n              </div>\n\n              <div className = \"col-lg-10 col-md-10 col-sm-10 info-panel\">\n\n                {Component && <Component />}\n                \n              </div>\n          </div>       \n    </div>\n      \n\n    </>\n  )\n}\n\nexport default Home;\n","/Users/sloane/Documents/Code/Portfolio-App/src/components/Navbar.js",["189","190","191"],"import React from \"react\";\nimport logo from \"../logo.png\";\nimport { Link } from \"react-scroll\";\n// REACT FONTAWESOME IMPORTS\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { NavLink } from 'react-router-dom';\n\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light fixed-top navbar-custom\" >\n      <div className=\"container\">\n\n        <a className=\"navbar-brand\" href=\"#\"></a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <FontAwesomeIcon icon={faBars} style={{ color: \"#fff\" }} />\n        </button>\n\n        <div className=\"collapse navbar-collapse \" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item active\">\n              <Link smooth={true} to=\"home\" className=\"nav-link\" href=\"#\">\n                <NavLink to = \"/\"> Home </NavLink>\n                <span className=\"sr-only\">(current)</span>\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link smooth={true} to=\"about\" offset={-110} className=\"nav-link\" >           <NavLink to = \"/\">Education</NavLink></Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link smooth={true} to=\"services\" offset={-110} className=\"nav-link\" href=\"#\"><NavLink to = \"/\">Skill</NavLink></Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link smooth={true} to=\"experience\" offset={-110} className=\"nav-link\" > <NavLink to = \"/\">experience</NavLink></Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link smooth={true} to=\"portfolio\" offset={-110} className=\"nav-link\" ><NavLink to = \"/\">Project</NavLink></Link>\n            </li>\n\n            <li className=\"nav-item\">\n              <Link smooth={true} to=\"contacts\" offset={-110} className=\"nav-link\" ><NavLink to = \"/\">contacts</NavLink></Link>\n            </li>\n\n          </ul>\n\n        </div>\n\n      </div>\n    </nav>\n  )\n}\n\nexport default Navbar\n","/Users/sloane/Documents/Code/Portfolio-App/src/components/AboutMe.js",[],"/Users/sloane/Documents/Code/Portfolio-App/src/components/Experience.js",[],"/Users/sloane/Documents/Code/Portfolio-App/src/components/Services.js",["192","193"],"import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFacebookF, faGoogle } from \"@fortawesome/free-brands-svg-icons\";\nimport { faDesktop, faFileCode, faLanguage, faTools } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Services = () => {\n  return (\n    <div id=\"services\" className=\"services\">\n      <h1 className=\"py-5\">Skills</h1>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-3 col-md-6 col-sm-6\">\n            <div className=\"box\">\n              <div className=\"circle\"><FontAwesomeIcon className=\"icon\" icon={faFileCode} size=\"2x\" /></div>\n              <h3>Programming Language</h3>\n              <p>C#, C++, Python, Java, JavaScript</p>\n            </div>\n          </div>\n          {/* - */}\n          <div className=\"col-lg-3 col-md-6 col-sm-6\">\n            <div className=\"box\">\n              <div className=\"circle\"><FontAwesomeIcon className=\"icon\" icon={faDesktop} size=\"2x\" /></div>\n\n              <h3>Others</h3>\n              <p>Unity, SFML, Xamarin, Xamarin UI Test, NodeJS, MongoDB, React</p>\n            </div>\n          </div>\n          {/* - */}\n          <div className=\"col-lg-3 col-md-6 col-sm-6\">\n            <div className=\"box\">\n              <div className=\"circle\"><FontAwesomeIcon className=\"icon\" icon={faLanguage} size=\"2x\" /></div>\n\n              <h3>Language</h3>\n              <p>English, Chinese, Japanese</p>\n            </div>\n          </div>\n          {/* - */}\n          <div className=\"col-lg-3 col-md-6 col-sm-6\">\n            <div className=\"box\">\n              <div className=\"circle\"><FontAwesomeIcon className=\"icon\" icon={faTools} size=\"2x\" /></div>\n\n              <h3>Software</h3>\n              <p>Microsoft Access, SPSS, Adobe Premiere Pro</p>.\n              </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  )\n}\n\nexport default Services;\n","/Users/sloane/Documents/Code/Portfolio-App/src/components/Contacts.js",[],"/Users/sloane/Documents/Code/Portfolio-App/src/components/Testimonials.js",[],"/Users/sloane/Documents/Code/Portfolio-App/src/components/Portfolio.js",["194","195","196","197","198","199","200","201"],"import React from \"react\";\n// Images\nimport blokusCover from \"../images/Blokus/blokus-cover.jpg\"\nimport chompCover from \"../images/Chomp/chomp-cover.jpg\"\nimport pathFindingCover from \"../images/pathfinding/pathfinding-cover.jpg\"\nimport netflix from \"../images/netflix.png\";\nimport cityGuide from \"../images/city-guide-app.png\";\nimport portfolio from \"../images/portfolio.png\";\nimport taskManager from \"../images/task-manager.png\";\n// FONTAWESOME IMPORTS\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearchPlus } from \"@fortawesome/free-solid-svg-icons\";\n// REACT POPUPBOX\nimport { PopupboxManager, PopupboxContainer } from \"react-popupbox\";\nimport \"react-popupbox/dist/react-popupbox.css\";\n\n// Project Pages\nimport {Link } from \"react-router-dom\"; \nconst Pofrfolio = () => {\n\n  // Netflix\n  const openPopupboxNetflix = () => {\n    const content = (\n      <>\n        <img className=\"portfolio-image-popupbox\" src={netflix} alt=\"Netflix Clone Project...\" />\n        <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Ex cumque illo est expedita quos adipisci suscipit unde itaque qui perferendis.</p>\n        <b>GitHub:</b> <a className=\"hyper-link\" onClick={() => window.open(\"https://github.com/8020Coding/netflix-project\")}>https://github.com/8020Coding/netflix-project</a>\n      </>\n    )\n    PopupboxManager.open({ content })\n  }\n\n  const popupboxConfigNetflix = {\n    titleBar: {\n      enable: true,\n      text: \"Netflix clone project.\"\n    },\n    fadeIn: true,\n    fadeInSpeed: 500\n  }\n\n  // City Guide App\n  const openPopupboxCityGuide = () => {\n    const content = (\n      <>\n        <img className=\"portfolio-image-popupbox\" src={cityGuide} alt=\"City Guide App Project...\" />\n        <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Ex cumque illo est expedita quos adipisci suscipit unde itaque qui perferendis.</p>\n        <b>Demo:</b> <a className=\"hyper-link\" onClick={() => window.open(\"https://city-guide-app-project.herokuapp.com/\", \"_blank\")}>https://city-guide-app-project.herokuapp.com/</a>\n        <br />\n        <b>GitHub:</b> <a className=\"hyper-link\" onClick={() => window.open(\"https://github.com/8020Coding/city-guide-app\", \"_blank\")}>https://github.com/8020Coding/city-guide-app</a>\n      </>\n    )\n    PopupboxManager.open({ content })\n  }\n\n  const popupboxConfigCityGuide = {\n    titleBar: {\n      enable: true,\n      text: \"City Guide App project.\"\n    },\n    fadeIn: true,\n    fadeInSpeed: 500\n  }\n\n  // Portfolio Project\n  const openPopupboxPortfolio = () => {\n    const content = (\n      <>\n        <img className=\"portfolio-image-popupbox\" src={portfolio} alt=\"Portfolio Project...\" />\n        <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Ex cumque illo est expedita quos adipisci suscipit unde itaque qui perferendis.</p>\n        <b>Demo:</b> <a className=\"hyper-link\" onClick={() => window.open(\"https://portfolio-rea-and-material-ui.herokuapp.com/\", \"_blank\")}>https://portfolio-rea-and-material-ui.herokuapp.com/</a>\n        <br />\n        <b>GitHub:</b> <a className=\"hyper-link\" onClick={() => window.open(\"https://github.com/8020Coding/portfilio\", \"_blank\")}>https://github.com/8020Coding/portfilio</a>\n      </>\n    )\n    PopupboxManager.open({ content })\n  }\n\n  const popupboxConfigPortfolio = {\n    titleBar: {\n      enable: true,\n      text: \"Poftfolio React and Material UI project.\"\n    },\n    fadeIn: true,\n    fadeInSpeed: 500\n  }\n\n  // Task Manager React and Redux Project\n  const openPopupboxTaskManager = () => {\n    const content = (\n      <>\n        <img className=\"portfolio-image-popupbox\" src={taskManager} alt=\"Task Manager React and Redux Project...\" />\n        <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Ex cumque illo est expedita quos adipisci suscipit unde itaque qui perferendis.</p>\n        <b>Demo:</b> <a className=\"hyper-link\" onClick={() => window.open(\"https://react-redux-task-manager.herokuapp.com/\", \"_blank\")}>https://react-redux-task-manager.herokuapp.com/</a>\n        <br />\n        <b>GitHub:</b> <a className=\"hyper-link\" onClick={() => window.open(\"https://github.com/8020Coding/task-manager\", \"_blank\")}>https://github.com/8020Coding/task-manager</a>\n      </>\n    )\n    PopupboxManager.open({ content })\n  }\n\n  const popupboxConfigTaskManager = {\n    titleBar: {\n      enable: true,\n      text: \"Task Manager React and Redux project.\"\n    },\n    fadeIn: true,\n    fadeInSpeed: 500\n  }\n\n\n  return (\n    <div id=\"portfolio\" className=\"portfolio-wrapper\">\n      <div className=\"container\">\n      \n        <h1 className=\"text-uppercase text-center py-5\">Project</h1>\n        <div className=\"image-box-wrapper row justify-content-center\">\n          <div className=\"portfolio-image-box\" >\n          <img className=\"portfolio-image\" src={blokusCover} alt=\"Blokus Project\" />\n          <Link to =\"/projects/Blokus\">\n            <div className=\"overflow\"></div>\n            <FontAwesomeIcon className=\"portfolio-icon\" icon={faSearchPlus} />\n          </Link>            \n          </div>\n          {/* - */}\n          <div className=\"portfolio-image-box\" onClick={openPopupboxCityGuide}>\n            <img className=\"portfolio-image\" src={chompCover} alt=\"ChompProject\" />\n            <Link to =\"/projects/Chomp\">\n              <div className=\"overflow\"></div>\n              <FontAwesomeIcon className=\"portfolio-icon\" icon={faSearchPlus} />\n            </Link>\n          </div>\n          {/* - */}\n          <div className=\"portfolio-image-box\" onClick={openPopupboxPortfolio}>\n            <img className=\"portfolio-image\" src={pathFindingCover} alt=\"Path Finding Project\" />\n            <Link to =\"/projects/PathFinding\">\n              <div className=\"overflow\"></div>\n              <FontAwesomeIcon className=\"portfolio-icon\" icon={faSearchPlus} />\n            </Link>\n          </div>\n          {/* - */}\n          <div className=\"portfolio-image-box\" onClick={openPopupboxTaskManager}>\n            <img className=\"portfolio-image\" src={taskManager} alt=\"Task Manager React and Redux Project...\" />\n            <div className=\"overflow\"></div>\n            <FontAwesomeIcon className=\"portfolio-icon\" icon={faSearchPlus} />\n          </div>\n        </div>\n      </div>\n      <PopupboxContainer {...popupboxConfigNetflix} />\n      <PopupboxContainer {...popupboxConfigCityGuide} />\n      <PopupboxContainer {...popupboxConfigPortfolio} />\n      <PopupboxContainer {...popupboxConfigTaskManager} />\n    </div>\n\n  )\n}\n\nexport default Pofrfolio;\n","/Users/sloane/Documents/Code/Portfolio-App/src/components/Footer.js",["202","203","204","205","206","207","208"],"import React from \"react\";\nimport {\n  FacebookShareButton,\n  FacebookIcon,\n  TwitterShareButton,\n  TwitterIcon,\n  RedditShareButton,\n  RedditIcon,\n  LinkedinShareButton,\n  LinkedinIcon\n} from \"react-share\";\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-4 col-md-6 col-sm-6\">\n            <div className=\"d-flex\">\n              <p></p>\n            </div>\n            <div className=\"d-flex\">\n              <a href=\"tel:555-555-555\"></a>\n            </div>\n            <div className=\"d-flex\">\n              <p>SloanZhang303@gmail.com</p>\n            </div>\n          </div>\n          <div className=\"col-lg-3 col-md-2 col-sm-6\">\n            <div className=\"row\">\n              <div className=\"col\">\n                <a className=\"footer-nav\">Home</a>\n                <br />\n                <a className=\"footer-nav\">Education</a>\n                <br />\n                <a className=\"footer-nav\">Skill</a>\n              </div>\n              <div className=\"col\">\n                <a className=\"footer-nav\">Experience</a>\n                <br />\n                <a className=\"footer-nav\">Project</a>\n                <br />\n                <a className=\"footer-nav\">Contacts</a>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-lg-5 col-md-5 col-sm-6 align-items-center\">\n            <div className=\"d-flex justify-content-center\">\n              <FacebookShareButton\n                url={\"https://www.youtube.com/8020coding\"}\n                quote={\"FullStack Developer\"}\n                hashtag=\"#javascript\"\n              >\n                <FacebookIcon className=\"mx-3\" size={36} />\n              </FacebookShareButton>\n              <TwitterShareButton\n                url={\"https://www.youtube.com/8020coding\"}\n                quote={\"FullStack Developer\"}\n                hashtag=\"#javascript\"\n              >\n                <TwitterIcon className=\"mx-3\" size={36} />\n              </TwitterShareButton>\n              <RedditShareButton\n                url={\"https://www.youtube.com/8020coding\"}\n                quote={\"FullStack Developer\"}\n                hashtag=\"#javascript\"\n              >\n                <RedditIcon className=\"mx-3\" size={36} />\n              </RedditShareButton>\n              <LinkedinShareButton\n                url={\"https://www.youtube.com/8020coding\"}\n                quote={\"FullStack Developer\"}\n                hashtag=\"#javascript\"\n              >\n                <LinkedinIcon className=\"mx-3\" size={36} />\n              </LinkedinShareButton>\n            </div>\n            <p className=\"pt-3 text-center\">\n              Copyright&copy;\n              {new Date().getFullYear()}&nbsp;\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Footer;\n","/Users/sloane/Documents/Code/Portfolio-App/src/components/Header.js",["209","210","211","212","213","214","215","216","217","218","219","220","221","222"],"import React from \"react\";\nimport Typed from \"react-typed\";\nimport { Link } from \"react-scroll\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\nimport { Rectangle, Circle, Ellipse, Line, Polyline, CornerBox, Triangle} from 'react-shapes';\nimport {\n  AwesomeButton,\n  AwesomeButtonProgress,\n  AwesomeButtonSocial,\n} from 'react-awesome-button';\nimport \"react-awesome-button/dist/styles.css\";\n\nconst Header = () => {\n  return (\n          <>\n\n            <canvas></canvas>\n\n            <h1></h1>\n            <Typed\n              className=\"typed-text\"\n              strings={[\"Hi there!\", \n                        \"My name is Yimiao Zhang\", \n                        ]}\n              typeSpeed={40}\n              backSpeed={60}\n                        \n            />\n            \n            <div className = \"social-link\">\n              <a className = \"link\" target=\"_blank\" href=\"https://github.com/YimiaoZhang\">           \n                <button type=\"button\" class=\"btn\">\n                  <FontAwesomeIcon className=\"icon\" icon={faGithub} size=\"3x\" /> \n                </button>\n              </a>\n                \n              <a className = \"link\" target=\"_blank\" href=\"https://www.linkedin.com/in/Sloane-Zhang/\">\n                <button type=\"button\" class=\"btn\">\n                  <FontAwesomeIcon className=\"icon\" icon={faLinkedin} size=\"3x\" /> \n                </button>\n              </a>\n            </div>\n          </>\n    \n  )\n}\n\nexport default Header;\n","/Users/sloane/Documents/Code/Portfolio-App/src/components/TestimonialsCarousel.js",[],["223","224"],"/Users/sloane/Documents/Code/Portfolio-App/src/components/Display.js",["225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246"],"\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Particles from \"react-particles-js\";\nimport Navbar from \"../components/Navbar\";\nimport Header from \"../components/Header\";\nimport AboutMe from \"../components/AboutMe\";\nimport Services from \"../components/Services\";\nimport Experience from \"../components/Experience\";\nimport Portfolio from \"../components/Portfolio\";\nimport Testimonials from \"../components/Testimonials\";\nimport Contacts from \"../components/Contacts\";\nimport Footer from \"../components/Footer\";\nimport React from \"react\";\nimport Typed from \"react-typed\";\nimport { Link } from \"react-scroll\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\nimport { Rectangle, Circle, Ellipse, Line, Polyline, CornerBox, Triangle} from 'react-shapes';\nimport {\n  AwesomeButton,\n  AwesomeButtonProgress,\n  AwesomeButtonSocial,\n} from 'react-awesome-button';\nimport \"react-awesome-button/dist/styles.css\";\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\n/*\nclass CurDisplay extends React.Component {\n   render(){\n     return (\n       <div>\n\n            <Switch>\n                <Route path=\"/\" component={Header} exact={true} />\n                <Route path=\"/education\" component={AboutMe} />\n                <Route path=\"/skills\" component={Portfolio} />\n                <Route path=\"/experience\" component={Experience} />\n\n            </Switch>\n\n      </div>\n    )\n  }\n}\n*/\n\nconst CurDisplay = () =>{\n    return (\n        <div>\n \n             <Switch>\n                 <Route path=\"/\" component={Header} exact={true} />\n                 <Route path=\"/education\" component={AboutMe} />\n                 <Route path=\"/skills\" component={Portfolio} />\n                 <Route path=\"/experience\" component={Experience} />\n \n             </Switch>\n \n       </div>\n     )\n}\nexport default CurDisplay;","/Users/sloane/Documents/Code/Portfolio-App/src/App.js",["247","248","249","250","251"],"import React, { Component } from 'react';\nimport {\n  Route,\n  NavLink,\n  Switch\n} from \"react-router-dom\";\nimport './App.css';\nimport Home from './Home';\nimport Blokus from \"./projects/Blokus\";\n\n// class component\nclass App extends Component {\n\n  render() {\n\n    return (\n    <>\n    </>\n    );\n  }\n}\n\nexport default App;","/Users/sloane/Documents/Code/Portfolio-App/src/App.test.js",[],["252","253"],"/Users/sloane/Documents/Code/Portfolio-App/src/components/DynamicSection.js",[],"/Users/sloane/Documents/Code/Portfolio-App/src/projects/ToDoList.js",["254","255","256","257"],"import React from 'react'\nimport '../App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {faArrowRight}from \"@fortawesome/free-solid-svg-icons\";\nimport Navbar from \"../components/Navbar\";\n\n\nfunction ToDoList() {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n\nexport default ToDoList","/Users/sloane/Documents/Code/Portfolio-App/src/projects/pathfinding/GUI.js",["258","259","260","261","262"],"// Basic JavaScript HTML5 GUI Helper Functions\n//\n// Author: David Churchill, Memorial University\n//         dave.churchill@gmail.com\n\nclass GUI {\n\n    constructor(container) {\n        this.container = container;\n    }\n\n    create(type, id, left, top, width, height) {\n        let elem = document.createElement(type);\n        elem.id = id;\n        elem.style.position = 'absolute';\n        if (left != 0) { elem.style.left = left; }\n        if (top != 0) { elem.style.top = top; }\n        if (height != 0) {\n            if (type === 'canvas') {\n                elem.height = height;\n            } else {\n                elem.style.height = height;\n            }\n        }\n        if (width != 0) {\n            if (type === 'canvas') {\n                elem.width = width;\n            } else {\n                elem.style.width = width;\n            }\n        }\n        this.container.appendChild(elem);\n        return elem;\n    }\n\n    createCanvas(width, height) {\n        this.bg = this.create('canvas', 'bg', 0, 0, width, height);\n        this.fg = this.create('canvas', 'fg', 0, 0, width, height);\n        this.bg_ctx = this.bg.getContext(\"2d\");\n        this.fg_ctx = this.fg.getContext(\"2d\");\n        this.fg_ctx.font = '14px Arial';\n    }\n\n    getMousePos(canvas, evt) {\n        let rect = canvas.getBoundingClientRect();\n        return { x: evt.clientX - rect.left, y: evt.clientY - rect.top };\n    }\n\n    addButton(container, id, left, top, width, height, label, onclick) {\n        let button = document.createElement(\"button\");\n        button.id = id;\n        button.gui = this;\n        button.onclick = onclick;\n        button.style.position = 'absolute';\n        button.style.left = left;\n        button.style.width = width;\n        button.style.height = height;\n        button.style.top = top;\n        button.innerHTML = label;\n        container.appendChild(button);\n    }\n\n    addText(container, id, left, top, width, height, label) {\n        let div = document.createElement(\"div\");\n        div.id = id;\n        div.gui = this;\n        div.style.position = 'absolute';\n        div.style.left = left;\n        div.style.width = width;\n        div.style.height = height;\n        div.style.top = top;\n        div.innerHTML = label;\n        container.appendChild(div);\n    }\n\n    // adds a Select box to the given container\n    // values: [[val1, desc1], [val2, desc2]]\n    addSelectBox(container, id, left, top, width, height, onchange, values) {\n        let select = document.createElement(\"select\");\n        select.id = id;\n        select.gui = this;\n        select.onchange = onchange;\n        select.style.position = 'absolute';\n        select.style.left = left;\n        select.style.width = width;\n        select.style.height = height;\n        select.style.top = top;\n        for (let i = 0; i < values.length; i++) {\n            let option = document.createElement(\"option\");\n            option.value = values[i][0];\n            option.text = values[i][1];\n            select.appendChild(option);\n        }\n        container.appendChild(select);\n    }\n\n    showElements(ids) {\n        for (let i = 0; i < ids.length; i++) {\n            document.getElementById(ids[i]).style.display = 'inline';\n        }\n    }\n\n    hideElements(ids) {\n        for (let i = 0; i < ids.length; i++) {\n            document.getElementById(ids[i]).style.display = 'none';\n        }\n    }\n}\n","/Users/sloane/Documents/Code/Portfolio-App/src/projects/pathfinding/Grid.js",["263"],"class Grid {\n\n    constructor(mapText) {\n        this.grid = mapText.split(\"\\n\");\n        this.width =  this.grid.length;\n        this.height = this.grid[0].length;\n        this.maxSize = 3;\n    }\n\n    get(x, y) {\n        return this.grid[y][x];\n    }\n\n    isOOB(x, y, size) {\n        return x < 0 || y < 0 || (x + size) > this.width || (y + size) > this.height;\n    }\n}\n","/Users/sloane/Documents/Code/Portfolio-App/src/projects/pathfinding/Search_Solution_OBS.js",["264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287"],"var _0x6a76=[\"\\x63\\x6F\\x6E\\x66\\x69\\x67\",\"\\x67\\x72\\x69\\x64\",\"\\x73\\x78\",\"\\x73\\x79\",\"\\x67\\x78\",\"\\x67\\x79\",\"\\x69\\x6E\\x50\\x72\\x6F\\x67\\x72\\x65\\x73\\x73\",\"\\x63\\x6F\\x73\\x74\",\"\\x70\\x61\\x74\\x68\",\"\\x6F\\x70\\x65\\x6E\",\"\\x63\\x6C\\x6F\\x73\\x65\\x64\",\"\\x63\\x6C\\x6F\\x73\\x65\\x64\\x53\\x74\\x61\\x74\\x65\\x73\",\"\\x6D\\x61\\x78\\x53\\x69\\x7A\\x65\",\"\\x6F\\x62\\x6A\\x65\\x63\\x74\\x53\\x69\\x7A\\x65\",\"\\x69\\x6E\\x4F\\x70\\x65\\x6E\",\"\\x53\\x65\\x61\\x72\\x63\\x68\\x20\\x4E\\x6F\\x74\\x20\\x43\\x6F\\x6D\\x70\\x6C\\x65\\x74\\x65\\x64\",\"\\x65\\x78\\x70\\x61\\x6E\\x64\\x65\\x64\",\"\\x63\\x6F\\x6D\\x70\\x75\\x74\\x65\\x43\\x6F\\x6E\\x6E\\x65\\x63\\x74\\x69\\x76\\x69\\x74\\x79\",\"\\x63\\x6F\\x6D\\x70\\x75\\x74\\x65\\x4C\\x65\\x67\\x61\\x6C\\x41\\x63\\x74\\x69\\x6F\\x6E\\x73\",\"\\x61\\x63\\x74\\x69\\x6F\\x6E\",\"\\x70\\x75\\x73\\x68\",\"\\x70\\x61\\x72\\x65\\x6E\\x74\",\"\\x72\\x65\\x76\\x65\\x72\\x73\\x65\",\"\\x73\\x65\\x63\\x74\\x6F\\x72\\x73\",\"\\x6C\\x65\\x67\\x61\\x6C\\x41\\x63\\x74\\x69\\x6F\\x6E\\x73\",\"\\x77\\x69\\x64\\x74\\x68\",\"\\x68\\x65\\x69\\x67\\x68\\x74\",\"\\x6C\\x65\\x6E\\x67\\x74\\x68\",\"\\x61\\x63\\x74\\x69\\x6F\\x6E\\x73\",\"\\x69\\x73\\x4C\\x65\\x67\\x61\\x6C\\x41\\x63\\x74\\x69\\x6F\\x6E\",\"\\x61\\x63\\x74\\x69\\x6F\\x6E\\x43\\x6F\\x73\\x74\\x73\",\"\\x6E\\x75\\x6D\\x53\\x65\\x63\\x74\\x6F\\x72\\x73\",\"\\x66\\x69\\x6C\\x6C\",\"\\x67\\x65\\x74\",\"\\x66\\x6C\\x6F\\x6F\\x64\\x46\\x69\\x6C\\x6C\",\"\\x69\\x73\\x4F\\x4F\\x42\",\"\\x67\\x65\\x74\\x53\\x65\\x63\\x74\\x6F\\x72\",\"\\x63\\x68\\x65\\x63\\x6B\\x54\\x65\\x72\\x72\\x61\\x69\\x6E\",\"\\x69\\x73\\x43\\x6F\\x6E\\x6E\\x65\\x63\\x74\\x65\\x64\",\"\\x68\\x61\\x73\\x68\",\"\\x61\\x6C\\x6C\\x4E\\x6F\\x64\\x65\\x73\",\"\\x72\\x65\\x73\\x65\\x74\\x4F\\x70\\x65\\x6E\",\"\\x61\\x64\\x64\\x54\\x6F\\x4F\\x70\\x65\\x6E\",\"\\x78\",\"\\x79\",\"\\x73\\x68\\x69\\x66\\x74\",\"\\x67\",\"\\x68\\x65\\x75\\x72\\x69\\x73\\x74\\x69\\x63\",\"\\x7A\\x65\\x72\\x6F\",\"\\x61\\x62\\x73\",\"\\x64\\x69\\x61\\x67\",\"\\x63\\x61\\x72\\x64\",\"\\x64\\x69\\x73\\x74\",\"\\x73\\x71\\x72\\x74\",\"\\x69\\x74\\x65\\x72\\x61\\x74\\x69\\x6F\\x6E\\x73\",\"\\x6F\\x70\\x65\\x6E\\x4C\\x69\\x73\\x74\\x53\\x69\\x7A\\x65\",\"\\x72\\x65\\x6D\\x6F\\x76\\x65\\x46\\x72\\x6F\\x6D\\x4F\\x70\\x65\\x6E\",\"\\x69\\x73\\x49\\x6E\\x43\\x6C\\x6F\\x73\\x65\\x64\",\"\\x6C\\x61\\x73\\x74\\x45\\x78\\x70\\x61\\x6E\\x64\\x65\\x64\\x58\",\"\\x6C\\x61\\x73\\x74\\x45\\x78\\x70\\x61\\x6E\\x64\\x65\\x64\\x59\",\"\\x69\\x73\\x47\\x6F\\x61\\x6C\",\"\\x72\\x65\\x63\\x6F\\x6E\\x73\\x74\\x72\\x75\\x63\\x74\\x50\\x61\\x74\\x68\",\"\\x67\\x65\\x74\\x4C\\x65\\x67\\x61\\x6C\\x41\\x63\\x74\\x69\\x6F\\x6E\\x73\",\"\\x63\\x78\",\"\\x63\\x79\",\"\\x62\\x65\\x74\\x74\\x65\\x72\\x49\\x6E\\x4F\\x70\\x65\\x6E\",\"\\x65\\x73\\x74\\x69\\x6D\\x61\\x74\\x65\\x43\\x6F\\x73\\x74\",\"\\x68\",\"\\x6E\\x6F\\x64\\x65\\x73\\x53\\x61\\x6D\\x65\\x46\",\"\\x6E\\x6F\\x64\\x65\\x73\\x41\\x64\\x64\\x65\\x64\",\"\\x61\\x64\\x64\\x54\\x6F\\x43\\x6C\\x6F\\x73\\x65\\x64\",\"\\x6E\\x61\\x6D\\x65\",\"\\x42\\x46\\x53\",\"\\x44\\x46\\x53\",\"\\x70\\x6F\\x70\",\"\\x42\\x65\\x73\\x74\\x46\\x69\\x72\\x73\\x74\",\"\\x73\\x6F\\x72\\x74\\x46\\x75\\x6E\\x63\\x74\\x69\\x6F\\x6E\",\"\\x73\\x69\\x7A\\x65\",\"\\x63\\x6F\\x6E\\x74\\x65\\x6E\\x74\",\"\\x55\\x43\\x53\",\"\\x47\\x42\\x65\\x46\\x53\",\"\\x41\\x2A\",\"\\x74\\x69\\x65\\x62\\x72\\x65\\x61\\x6B\",\"\\x66\\x6F\\x6E\\x6C\\x79\",\"\\x6C\\x65\\x73\\x73\\x67\",\"\\x6C\\x65\\x73\\x73\\x68\",\"\\x57\\x41\\x2A\",\"\\x77\\x65\\x69\\x67\\x68\\x74\"];class SearchAlgorithm{constructor(_0x841bx2,_0x841bx3){this[_0x6a76[0]]= _0x841bx3;this[_0x6a76[1]]= _0x841bx2;this[_0x6a76[2]]=  -1;this[_0x6a76[3]]=  -1;this[_0x6a76[4]]=  -1;this[_0x6a76[5]]=  -1;this[_0x6a76[6]]= false;this[_0x6a76[7]]= 0;this[_0x6a76[8]]= [];this[_0x6a76[9]]= [];this[_0x6a76[10]]= [];this[_0x6a76[11]]= [];this[_0x6a76[12]]= 3;this[_0x6a76[13]]= 1;this[_0x6a76[14]]= [];this[_0x6a76[7]]= _0x6a76[15];this[_0x6a76[16]]= 0;this[_0x6a76[17]]();this[_0x6a76[18]]()}reconstructPath(_0x841bx5){let _0x841bx6=[];while(_0x841bx5[_0x6a76[21]]!= null){_0x841bx6[_0x6a76[20]](_0x841bx5[_0x6a76[19]]);_0x841bx5= _0x841bx5[_0x6a76[21]]};_0x841bx6[_0x6a76[22]]();return _0x841bx6}getSector(_0x841bx8,_0x841bx9,_0x841bxa){return this[_0x6a76[23]][_0x841bxa][_0x841bx8][_0x841bx9]}computeLegalActions(){this[_0x6a76[24]]= [];for(let _0x841bxc=0;_0x841bxc<= this[_0x6a76[12]];_0x841bxc++){let _0x841bxd=[];for(let _0x841bx8=0;_0x841bx8< this[_0x6a76[1]][_0x6a76[25]];_0x841bx8++){_0x841bxd[_0x841bx8]= [];for(let _0x841bx9=0;_0x841bx9< this[_0x6a76[1]][_0x6a76[26]];_0x841bx9++){let _0x841bxe=[];for(let _0x841bxf=0;_0x841bxf< this[_0x6a76[0]][_0x6a76[28]][_0x6a76[27]];_0x841bxf++){if(this[_0x6a76[29]](_0x841bx8,_0x841bx9,_0x841bxc,this[_0x6a76[0]][_0x6a76[28]][_0x841bxf])){_0x841bxe[_0x6a76[20]]({action:this[_0x6a76[0]][_0x6a76[28]][_0x841bxf],cost:this[_0x6a76[0]][_0x6a76[30]][_0x841bxf],cx:_0x841bx8+ this[_0x6a76[0]][_0x6a76[28]][_0x841bxf][0],cy:_0x841bx9+ this[_0x6a76[0]][_0x6a76[28]][_0x841bxf][1]})}};_0x841bxd[_0x841bx8][_0x841bx9]= _0x841bxe}};this[_0x6a76[24]][_0x841bxc]= _0x841bxd}}getLegalActions(_0x841bx8,_0x841bx9,_0x841bxa){return this[_0x6a76[24]][_0x841bxa][_0x841bx8][_0x841bx9]}computeConnectivity(){this[_0x6a76[23]]= [];for(let _0x841bxc=0;_0x841bxc<= this[_0x6a76[12]];_0x841bxc++){let _0x841bxd=[];for(let _0x841bx8=0;_0x841bx8< this[_0x6a76[1]][_0x6a76[25]];_0x841bx8++){_0x841bxd[_0x841bx8]= [];for(let _0x841bx9=0;_0x841bx9< this[_0x6a76[1]][_0x6a76[26]];_0x841bx9++){_0x841bxd[_0x841bx8][_0x841bx9]= 0}};this[_0x6a76[23]][_0x841bxc]= _0x841bxd};this[_0x6a76[31]]=  new Array(this[_0x6a76[12]]+ 1)[_0x6a76[32]](1);for(let _0x841bxc=1;_0x841bxc<= this[_0x6a76[12]];_0x841bxc++){for(let _0x841bx8=0;_0x841bx8< this[_0x6a76[1]][_0x6a76[25]];_0x841bx8++){for(let _0x841bx9=0;_0x841bx9< this[_0x6a76[1]][_0x6a76[26]];_0x841bx9++){if(this[_0x6a76[34]](_0x841bx8,_0x841bx9,this[_0x6a76[1]][_0x6a76[33]](_0x841bx8,_0x841bx9),_0x841bxc,this[_0x6a76[31]][_0x841bxc])){this[_0x6a76[31]][_0x841bxc]++}}}}}floodFill(_0x841bx8,_0x841bx9,_0x841bx13,_0x841bxa,_0x841bx14){let _0x841bx15=[[_0x841bx8,_0x841bx9]];for(let _0x841bx16=0;_0x841bx16< _0x841bx15[_0x6a76[27]];_0x841bx16++){if(this[_0x6a76[1]][_0x6a76[35]](_0x841bx15[_0x841bx16][0],_0x841bx15[_0x841bx16][1],_0x841bxa)){continue};if(this[_0x6a76[36]](_0x841bx15[_0x841bx16][0],_0x841bx15[_0x841bx16][1],_0x841bxa)!= 0){continue};if(!this[_0x6a76[37]](_0x841bx15[_0x841bx16][0],_0x841bx15[_0x841bx16][1],_0x841bx13,_0x841bxa)){continue};this[_0x6a76[23]][_0x841bxa][_0x841bx15[_0x841bx16][0]][_0x841bx15[_0x841bx16][1]]= _0x841bx14;_0x841bx15[_0x6a76[20]]([_0x841bx15[_0x841bx16][0]+ 1,_0x841bx15[_0x841bx16][1]]);_0x841bx15[_0x6a76[20]]([_0x841bx15[_0x841bx16][0]- 1,_0x841bx15[_0x841bx16][1]]);_0x841bx15[_0x6a76[20]]([_0x841bx15[_0x841bx16][0],_0x841bx15[_0x841bx16][1]+ 1]);_0x841bx15[_0x6a76[20]]([_0x841bx15[_0x841bx16][0],_0x841bx15[_0x841bx16][1]- 1])};return _0x841bx15[_0x6a76[27]]> 1}checkTerrain(_0x841bx8,_0x841bx9,_0x841bx13,_0x841bxa){for(let _0x841bx18=0;_0x841bx18< _0x841bxa;_0x841bx18++){for(let _0x841bx19=0;_0x841bx19< _0x841bxa;_0x841bx19++){if(this[_0x6a76[1]][_0x6a76[35]](_0x841bx8,_0x841bx9)){return false};if(this[_0x6a76[1]][_0x6a76[33]](_0x841bx8+ _0x841bx18,_0x841bx9+ _0x841bx19)!= _0x841bx13){return false}}};return true}isLegalAction(_0x841bx8,_0x841bx9,_0x841bxa,_0x841bx1b){let _0x841bx1c=_0x841bx8+ _0x841bx1b[0];let _0x841bx1d=_0x841bx9+ _0x841bx1b[1];return this[_0x6a76[38]](_0x841bx8,_0x841bx9,_0x841bx1c,_0x841bx1d,_0x841bxa)&& this[_0x6a76[38]](_0x841bx8,_0x841bx9,_0x841bx8,_0x841bx1d,_0x841bxa)&& this[_0x6a76[38]](_0x841bx8,_0x841bx9,_0x841bx1c,_0x841bx9,_0x841bxa)}isConnected(_0x841bx1f,_0x841bx20,_0x841bx21,_0x841bx22,_0x841bxa){if(this[_0x6a76[1]][_0x6a76[35]](_0x841bx1f,_0x841bx20,_0x841bxa)|| this[_0x6a76[1]][_0x6a76[35]](_0x841bx21,_0x841bx22,_0x841bxa)){return false};return this[_0x6a76[36]](_0x841bx1f,_0x841bx20,_0x841bxa)!= 0&& (this[_0x6a76[36]](_0x841bx1f,_0x841bx20,_0x841bxa)== this[_0x6a76[36]](_0x841bx21,_0x841bx22,_0x841bxa))}startSearch(_0x841bx18,_0x841bx19,_0x841bx24,_0x841bx25,_0x841bxa){if(_0x841bx18==  -1|| _0x841bx24==  -1){return};this[_0x6a76[2]]= _0x841bx18;this[_0x6a76[3]]= _0x841bx19;this[_0x6a76[4]]= _0x841bx24;this[_0x6a76[5]]= _0x841bx25;this[_0x6a76[7]]= _0x6a76[15];this[_0x6a76[8]]= [];this[_0x6a76[10]]= [];this[_0x6a76[16]]= 0;this[_0x6a76[10]][_0x6a76[27]]= this[_0x6a76[1]][_0x6a76[25]]* this[_0x6a76[1]][_0x6a76[26]];this[_0x6a76[10]][_0x6a76[32]](false);this[_0x6a76[10]][this[_0x6a76[39]](_0x841bx18,_0x841bx19)]= true;this[_0x6a76[14]][_0x6a76[27]]= this[_0x6a76[1]][_0x6a76[25]]* this[_0x6a76[1]][_0x6a76[26]];this[_0x6a76[14]][_0x6a76[32]](false);this[_0x6a76[14]][this[_0x6a76[39]](_0x841bx18,_0x841bx19)]= true;this[_0x6a76[6]]= true;this[_0x6a76[11]]= [];this[_0x6a76[40]]= [];this[_0x6a76[13]]= _0x841bxa;let _0x841bx26= new SolutionNode(_0x841bx18,_0x841bx19,null,[0,0],0,0);this[_0x6a76[41]]();this[_0x6a76[42]](_0x841bx26)}resetOpen(){this[_0x6a76[9]]= []}isGoal(_0x841bx8,_0x841bx9){return _0x841bx8== this[_0x6a76[4]]&& _0x841bx9== this[_0x6a76[5]]}hash(_0x841bx8,_0x841bx9){return _0x841bx8* this[_0x6a76[1]][_0x6a76[26]]+ _0x841bx9}addToClosed(_0x841bx8,_0x841bx9){this[_0x6a76[10]][this[_0x6a76[39]](_0x841bx8,_0x841bx9)]= true;this[_0x6a76[11]][_0x6a76[20]]([_0x841bx8,_0x841bx9])}isInClosed(_0x841bx8,_0x841bx9){return this[_0x6a76[10]][this[_0x6a76[39]](_0x841bx8,_0x841bx9)]}removeFromClosed(_0x841bx8,_0x841bx9){this[_0x6a76[10]][this[_0x6a76[39]](_0x841bx8,_0x841bx9)]= false}addToOpen(_0x841bx5){this[_0x6a76[9]][_0x6a76[20]](_0x841bx5);this[_0x6a76[40]][this[_0x6a76[39]](_0x841bx5[_0x6a76[43]],_0x841bx5[_0x6a76[44]])]= _0x841bx5;this[_0x6a76[14]][this[_0x6a76[39]](_0x841bx5[_0x6a76[43]],_0x841bx5[_0x6a76[44]])]= true}openListSize(){return this[_0x6a76[9]][_0x6a76[27]]}removeFromOpen(){let _0x841bx5=this[_0x6a76[9]][_0x6a76[45]]();this[_0x6a76[14]][this[_0x6a76[39]](_0x841bx5[_0x6a76[43]],_0x841bx5[_0x6a76[44]])]= false;return _0x841bx5}betterInOpen(_0x841bx8,_0x841bx9,_0x841bx31){let hash=this[_0x6a76[39]](_0x841bx8,_0x841bx9);if(this[_0x6a76[14]][hash]){if(this[_0x6a76[40]][hash][_0x6a76[46]]<= _0x841bx31){return true}};return false}getOpen(){let _0x841bx33=[];for(let _0x841bx34=0;_0x841bx34< this[_0x6a76[9]][_0x6a76[27]];_0x841bx34++){_0x841bx33[_0x6a76[20]]([this[_0x6a76[9]][_0x841bx34][_0x6a76[43]],this[_0x6a76[9]][_0x841bx34][_0x6a76[44]]])};return _0x841bx33}getClosed(){return this[_0x6a76[11]]}estimateCost(_0x841bx18,_0x841bx19,_0x841bx24,_0x841bx25){if(this[_0x6a76[0]][_0x6a76[47]]== _0x6a76[48]){return 0};let _0x841bx37=Math[_0x6a76[49]](_0x841bx18- _0x841bx24);let _0x841bx38=Math[_0x6a76[49]](_0x841bx19- _0x841bx25);if(this[_0x6a76[0]][_0x6a76[47]]== _0x6a76[50]){if(_0x841bx37> _0x841bx38){return _0x841bx38* 141+ (_0x841bx37- _0x841bx38)* 100}else {return _0x841bx37* 141+ (_0x841bx38- _0x841bx37)* 100}}else {if(this[_0x6a76[0]][_0x6a76[47]]== _0x6a76[51]){return (_0x841bx37+ _0x841bx38)* 100}else {if(this[_0x6a76[0]][_0x6a76[47]]== _0x6a76[52]){return Math[_0x6a76[53]](_0x841bx37* _0x841bx37+ _0x841bx38* _0x841bx38)* 100}}}}searchIteration(){this[_0x6a76[54]]++;if(!this[_0x6a76[6]]){return};if(!this[_0x6a76[38]](this[_0x6a76[2]],this[_0x6a76[3]],this[_0x6a76[4]],this[_0x6a76[5]],this[_0x6a76[13]])){this[_0x6a76[6]]= false;this[_0x6a76[7]]=  -1;return};if(this[_0x6a76[55]]()<= 0){this[_0x6a76[6]]= false;this[_0x6a76[7]]=  -1;return};let _0x841bx5=this[_0x6a76[56]]();while(this[_0x6a76[55]]()> 0&& this[_0x6a76[57]](_0x841bx5[_0x6a76[43]],_0x841bx5[_0x6a76[44]])){_0x841bx5= this[_0x6a76[56]]()};this[_0x6a76[58]]= _0x841bx5[_0x6a76[43]];this[_0x6a76[59]]= _0x841bx5[_0x6a76[44]];if(this[_0x6a76[60]](_0x841bx5[_0x6a76[43]],_0x841bx5[_0x6a76[44]])){this[_0x6a76[8]]= this[_0x6a76[61]](_0x841bx5);this[_0x6a76[7]]= _0x841bx5[_0x6a76[46]];this[_0x6a76[6]]= false;return};let _0x841bxe=this[_0x6a76[62]](_0x841bx5[_0x6a76[43]],_0x841bx5[_0x6a76[44]],this[_0x6a76[13]]);for(let _0x841bxf=0;_0x841bxf< _0x841bxe[_0x6a76[27]];_0x841bxf++){let _0x841bx1c=_0x841bxe[_0x841bxf][_0x6a76[63]];let _0x841bx1d=_0x841bxe[_0x841bxf][_0x6a76[64]];if(this[_0x6a76[57]](_0x841bx1c,_0x841bx1d)){continue};let _0x841bx31=_0x841bx5[_0x6a76[46]]+ _0x841bxe[_0x841bxf][_0x6a76[7]];if(this[_0x6a76[65]](_0x841bx1c,_0x841bx1d,_0x841bx31)){continue};let _0x841bx3a= new SolutionNode(_0x841bx1c,_0x841bx1d,_0x841bx5,_0x841bxe[_0x841bxf][_0x6a76[19]],_0x841bx31,this[_0x6a76[66]](_0x841bx1c,_0x841bx1d,this[_0x6a76[4]],this[_0x6a76[5]]));if(_0x841bx3a[_0x6a76[46]]+ _0x841bx3a[_0x6a76[67]]== _0x841bx5[_0x6a76[46]]+ _0x841bx5[_0x6a76[67]]){this[_0x6a76[68]]++};this[_0x6a76[69]]++;this[_0x6a76[42]](_0x841bx3a)};this[_0x6a76[70]](_0x841bx5[_0x6a76[43]],_0x841bx5[_0x6a76[44]]);this[_0x6a76[16]]++}};class Search_BFS extends SearchAlgorithm{constructor(_0x841bx2,_0x841bx3){super(_0x841bx2,_0x841bx3);this[_0x6a76[71]]= _0x6a76[72]}removeFromOpen(){let _0x841bx5=this[_0x6a76[9]][_0x6a76[45]]();this[_0x6a76[14]][this[_0x6a76[39]](_0x841bx5[_0x6a76[43]],_0x841bx5[_0x6a76[44]])]= false;return _0x841bx5}};class Search_DFS extends SearchAlgorithm{constructor(_0x841bx2,_0x841bx3){super(_0x841bx2,_0x841bx3);this[_0x6a76[71]]= _0x6a76[73]}removeFromOpen(){let _0x841bx5=this[_0x6a76[9]][_0x6a76[74]]();this[_0x6a76[14]][this[_0x6a76[39]](_0x841bx5[_0x6a76[43]],_0x841bx5[_0x6a76[44]])]= false;return _0x841bx5}};class Search_BestFirst extends SearchAlgorithm{constructor(_0x841bx2,_0x841bx3){super(_0x841bx2,_0x841bx3);this[_0x6a76[71]]= _0x6a76[75];this[_0x6a76[76]]= _0x841bx3[_0x6a76[76]];this[_0x6a76[41]]()}removeFromOpen(){let _0x841bx5=this[_0x6a76[9]][_0x6a76[74]]();this[_0x6a76[14]][this[_0x6a76[39]](_0x841bx5[_0x6a76[43]],_0x841bx5[_0x6a76[44]])]= false;return _0x841bx5}openListSize(){return this[_0x6a76[9]][_0x6a76[77]]()}getOpen(){let _0x841bx33=[];for(let _0x841bx34=0;_0x841bx34< this[_0x6a76[9]][_0x6a76[78]][_0x6a76[27]];_0x841bx34++){_0x841bx33[_0x6a76[20]]([this[_0x6a76[9]][_0x6a76[78]][_0x841bx34][_0x6a76[43]],this[_0x6a76[9]][_0x6a76[78]][_0x841bx34][_0x6a76[44]]])};return _0x841bx33}resetOpen(){this[_0x6a76[9]]=  new BinaryHeap(this[_0x6a76[0]][_0x6a76[76]])}};class Search_UCS extends Search_BestFirst{constructor(_0x841bx2,_0x841bx3){super(_0x841bx2,_0x841bx3);this[_0x6a76[71]]= _0x6a76[79];this[_0x6a76[0]][_0x6a76[76]]= function(_0x841bx5){return _0x841bx5[_0x6a76[46]]}}};class Search_GreedyBeFS extends Search_BestFirst{constructor(_0x841bx2,_0x841bx3){super(_0x841bx2,_0x841bx3);this[_0x6a76[71]]= _0x6a76[80];this[_0x6a76[0]][_0x6a76[76]]= function(_0x841bx5){return _0x841bx5[_0x6a76[67]]}}};class Search_AStar extends Search_BestFirst{constructor(_0x841bx2,_0x841bx3){super(_0x841bx2,_0x841bx3);this[_0x6a76[71]]= _0x6a76[81];if(this[_0x6a76[0]][_0x6a76[82]]== _0x6a76[83]){this[_0x6a76[0]][_0x6a76[76]]= function(_0x841bx5){return (_0x841bx5[_0x6a76[46]]+ _0x841bx5[_0x6a76[67]])}};if(this[_0x6a76[0]][_0x6a76[82]]== _0x6a76[84]){this[_0x6a76[0]][_0x6a76[76]]= function(_0x841bx5){return (_0x841bx5[_0x6a76[46]]+ _0x841bx5[_0x6a76[67]])* 1000000+ _0x841bx5[_0x6a76[46]]}};if(this[_0x6a76[0]][_0x6a76[82]]== _0x6a76[85]){this[_0x6a76[0]][_0x6a76[76]]= function(_0x841bx5){return (_0x841bx5[_0x6a76[46]]+ _0x841bx5[_0x6a76[67]])* 1000000+ _0x841bx5[_0x6a76[67]]}}}};class Search_WAStar extends Search_BestFirst{constructor(_0x841bx2,_0x841bx3){super(_0x841bx2,_0x841bx3);this[_0x6a76[71]]= _0x6a76[86];if(this[_0x6a76[0]][_0x6a76[82]]== _0x6a76[85]){this[_0x6a76[0]][_0x6a76[76]]= function(_0x841bx5){return (_0x841bx5[_0x6a76[46]]+ _0x841bx3[_0x6a76[87]]* _0x841bx5[_0x6a76[67]])* 1000000+ _0x841bx5[_0x6a76[67]]}}}};class SolutionNode{constructor(_0x841bx8,_0x841bx9,_0x841bx3b,_0x841bx1b,_0x841bx3c,_0x841bx3d){this[_0x6a76[43]]= _0x841bx8;this[_0x6a76[44]]= _0x841bx9;this[_0x6a76[19]]= _0x841bx1b;this[_0x6a76[21]]= _0x841bx3b;this[_0x6a76[46]]= _0x841bx3c;this[_0x6a76[67]]= _0x841bx3d}}","/Users/sloane/Documents/Code/Portfolio-App/src/projects/pathfinding/BinaryHeap.js",["288","289","290"],"// Binary Heap Class\n//\n// Implementation from:\n// http://eloquentjavascript.net/1st_edition/appendix2.html\n//\n// Modified by David Churchill for use in COMP 3200\n\nclass BinaryHeap {\n\n    constructor(scoreFunction) {\n        this.content = [];\n        this.scoreFunction = scoreFunction;\n    }\n\n    push(element) {\n        // Add the new element to the end of the array.\n        this.content.push(element);\n        // Allow it to bubble up.\n        this.bubbleUp(this.content.length - 1);\n    }\n\n    pop() {\n        // Store the first element so we can return it later.\n        var result = this.content[0];\n        // Get the element at the end of the array.\n        var end = this.content.pop();\n        // If there are any elements left, put the end element at the\n        // start, and var it sink down.\n        if (this.content.length > 0) {\n            this.content[0] = end;\n            this.sinkDown(0);\n        }\n        return result;\n    }\n\n    remove(node) {\n        var length = this.content.length;\n        // To remove a value, we must search through the array to find\n        // it.\n        for (var i = 0; i < length; i++) {\n            if (this.content[i] != node) continue;\n            // When it is found, the process seen in 'pop' is repeated\n            // to fill up the hole.\n            var end = this.content.pop();\n            // If the element we popped was the one we needed to remove,\n            // we're done.\n            if (i == length - 1) break;\n            // Otherwise, we replace the removed element with the popped\n            // one, and allow it to float up or sink down as appropriate.\n            this.content[i] = end;\n            this.bubbleUp(i);\n            this.sinkDown(i);\n            break;\n        }\n    }\n\n    size() {\n        return this.content.length;\n    }\n\n    bubbleUp(n) {\n        // Fetch the element that has to be moved.\n        var element = this.content[n], score = this.scoreFunction(element);\n        // When at 0, an element can not go up any further.\n        while (n > 0) {\n            // Compute the parent element's index, and fetch it.\n            var parentN = Math.floor((n + 1) / 2) - 1, parent = this.content[parentN];\n            // If the parent has a lesser score, things are in order and we\n            // are done.\n            if (score >= this.scoreFunction(parent)) {\n                break;\n            }\n            // Otherwise, swap the parent with the current element and\n            // continue.\n            this.content[parentN] = element;\n            this.content[n] = parent;\n            n = parentN;\n        }\n    }\n\n    sinkDown(n) {\n        // Look up the target element and its score.\n        var length = this.content.length,\n          element = this.content[n],\n          elemScore = this.scoreFunction(element);\n\n        while (true) {\n            // Compute the indices of the child elements.\n            var child2N = (n + 1) * 2, child1N = child2N - 1;\n            // This is used to store the new position of the element,\n            // if any.\n            var swap = null;\n            // If the first child exists (is inside the array)...\n            if (child1N < length) {\n                // Look it up and compute its score.\n                var child1 = this.content[child1N];\n                var child1Score = this.scoreFunction(child1);\n                // If the score is less than our element's, we need to swap.\n                if (child1Score < elemScore)\n                    swap = child1N;\n            }\n            // Do the same checks for the other child.\n            if (child2N < length) {\n                var child2 = this.content[child2N];\n                var child2Score = this.scoreFunction(child2);\n                if (child2Score < (swap == null ? elemScore : child1Score))\n                    swap = child2N;\n            }\n\n            // No need to swap further, we are done.\n            if (swap == null) break;\n\n            // Otherwise, swap and continue.\n            this.content[n] = this.content[swap];\n            this.content[swap] = element;\n            n = swap;\n        }\n    }\n}\n","/Users/sloane/Documents/Code/Portfolio-App/src/projects/pathfinding/GridGUI.js",["291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360"],"class GridGUI extends GUI {\n\n    constructor (container, mapText) {\n        // construct a GUI in the given container\n        super(container);\n        this.map = new Grid(mapText);\n        \n        // legal actions passed into the search\n        this.config = {};\n        this.config.actions = [ [1, 1], [-1, -1], [1, -1], [-1, 1], [0, 1], [0, -1], [1, 0], [-1, 0]];\n        this.config.actionCosts = [141, 141, 141, 141, 100, 100, 100, 100];\n        this.config.tiebreak = 'lessh';\n        this.config.weight = 1;\n        this.config.heuristic = 'diag';\n        \n\t\tthis.pixelWidth = 1020;\n\t\tthis.pixelHeight = 1020;\n\t\tthis.sqSize = this.pixelWidth / this.map.width;\n\t\n        this.showIterations = false;\n        this.drawInfo = true;\n        this.step = false;\n        this.stepping = false;\n        this.drawMethod = 'info';\n        this.showGrid = true;\n        this.animspeed = 1;\n        \n        // object size and maximum size, for this assignment it is 1\n        this.osize = 1;\n        this.maxSize = 1;\n        this.mx = -1;\n        this.my = -1;\n        this.gx = -1;\n        this.gy = -1;\n        this.omx = -1;\n        this.omy = -1;\n\n        ggui = this;\n\n        // the colors used to draw the map\n        this.colors = [\"#777777\", \"#00ff00\", \"#0055ff\"];\n        this.pathTime = 0;  // time it took to calculate the previous path\n\n        this.setHTML();\n        this.addEventListeners();\n        this.setDrawMethod();\n        this.drawBackground();\n        this.drawGrid();\n        this.setAlgorithm();\n    }\n\n    // draw the foreground, is called every 'frame'\n    draw() {\n\n        // start the draw timer\n        let t0 = performance.now();\n        // clear the foreground to white\n        this.fg_ctx.clearRect(0, 0, this.bg.width, this.bg.height);\n        // if the left mouse button is down in a valid location\n        if (this.omx != -1) {\n        \n            if (this.showIterations) {\n                if (!this.stepping) {\n                    for (let a=0; a<this.animspeed; a++) { this.search.searchIteration(); }\n                } else if (this.step) {\n                    this.search.searchIteration();\n                    this.step = false;\n                }\n            } else {\n                let setTime = this.search.inProgress;\n                let tt0 = performance.now();\n                while (this.search.inProgress) { this.search.searchIteration(); }\n                let tt1 = performance.now();\n                if (setTime) { this.pathTime = Math.round(tt1 - tt0); this.displaySearchInfo(this.testDiv); }\n            }\n            \n            let ix = this.omx;\n            let iy = this.omy;\n            \n            let open = this.search.getOpen();\n            // draw the remaining fringe of the BFS\n            for (let i = 0; this.drawInfo && i < open.length; i++) {\n                this.drawAgent(open[i][0], open[i][1], this.osize, '#ffcc00');\n            }\n\n            // draw the expanded states from the BFS\n            let closed = this.search.getClosed();\n            for (let i = 0; this.drawInfo && i <closed.length; i++) {\n                this.drawAgent(closed[i][0], closed[i][1], this.osize, '#ff0000');\n            }\n\n            // draw the path returned by the user's algorithm\n            for (let i = 0; i < this.search.path.length; i++) {\n                ix += this.search.path[i][0];\n                iy += this.search.path[i][1];\n                this.drawAgent(ix, iy, this.osize, '#ffffff');\n            }\n            // draw the agent in yellow\n            this.drawAgent(this.omx, this.omy, this.osize, '#ffffff');\n        }\n\n        if (this.mx != -1 && this.mouse == 3) {\n\t\t\tfor (let x=0; x < this.map.width; x++) {\n\t\t\t\tfor (let y=0; y < this.map.height; y++) {\n\t\t\t\t\tif (this.search.isConnected(this.mx, this.my, x, y, this.osize)) {\n\t\t\t\t\t\tthis.drawAgent(x, y, 1, '#ff22ff');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n        // if the mouse is on the screen, draw the current location\n        if (this.mx != -1) {\n            this.drawAgent(this.mx, this.my, this.osize, '#ffffff');\n        }\n\n        // if there's a search in progress, draw the goal\n        // if the mouse is on the screen, draw the current location\n        if (this.search.inProgress) {\n            this.drawAgent(this.search.gx, this.search.gy, this.osize, '#ffffff');\n        }\n\n        this.drawGrid();\n\n        // calculate how long the drawing took\n        let t1 = performance.now();\n        let ms = Math.round(t1 - t0);\n        // print on screen how long the drawing and path-finding took\n        //this.fg_ctx.fillStyle = \"#ffffff\";\n        //this.fg_ctx.fillText(\"Mouse Pos: (\" + this.mx + \",\" + this.my + \")\", 5, this.bg.height - 53);\n        //this.fg_ctx.fillText(\"H(n): \" + (this.search.gx == -1 ? 'No Goal Selected' : this.search.estimateCost(this.mx, this.my, this.search.gx, this.search.gy)), 5, this.bg.height - 38);\n        //this.fg_ctx.fillText(\"Compute Time: \" + this.pathTime + \" ms\", 5, this.bg.height - 23);\n        //this.fg_ctx.fillText(\"Path Cost: \" + this.search.cost, 5, this.bg.height - 8);\n    }\n\n    drawAgent(x, y, size, color) {\n        this.fg_ctx.fillStyle = color;\n        for (let sx = 0; sx < size; sx++) {\n            for (let sy = 0; sy < size; sy++) {\n                this.fg_ctx.fillRect((x + sx) * this.sqSize, (y + sy) * this.sqSize, this.sqSize, this.sqSize);\n            }\n        }\n    }\n\n    drawGrid() {\n        // draw horizontal lines\n\t\tif (this.showGrid) {\n\t\t\tthis.fg_ctx.fillStyle = \"#000000\";\n\t\t\tfor (let y = 0; y <= this.map.height; y++) {\n\t\t\t\tthis.fg_ctx.fillRect(0, y * this.sqSize, this.fg.width, 1);\n\t\t\t}\n\t\t\tfor (let x = 0; x <= this.map.width; x++) {\n\t\t\t\tthis.fg_ctx.fillRect(x * this.sqSize, 0, 1, this.fg.height);\n\t\t\t}\n\t\t}\n    }\n\n    // draw the background map, is called once on construction\n    drawBackground() {\n        for (let y = 0; y < this.map.height; y++) {\n            for (let x = 0; x < this.map.width; x++) {\n                this.bg_ctx.fillStyle = this.colors[this.map.get(x, y) - '0'];\n                this.bg_ctx.fillRect(x * this.sqSize, y * this.sqSize, this.sqSize, this.sqSize);\n            }\n        }\n        \n    }\n\n    drawNodeLine(node, color) {\n        if (node.parent == null) { return; }\n        var half = this.sqSize / 2;\n        this.fg_ctx.fillStyle = color;\n        ox1 = node.x * this.sqSize + half;\n        oy1 = node.y * this.sqSize + half;\n        ox2 = ox1 - (node.action[0] / 3) * this.sqSize;\n        oy2 = oy1 - (node.action[1] / 3) * this.sqSize;\n        this.drawLine(ox1, oy1, ox2, oy2, color);\n    }\n\n    drawLine(x1, y1, x2, y2, color) {\n        this.fg_ctx.fillStyle = color;\n        this.fg_ctx.beginPath();\n        this.fg_ctx.moveTo(x1, y1);\n        this.fg_ctx.lineTo(x2, y2);\n        this.fg_ctx.stroke();\n    }\n\n    addEventListeners() {\n\n        this.fg.gui = this;\n        this.fg.addEventListener('mousemove', function (evt) {\n            let mousePos = this.gui.getMousePos(this, evt);\n            let newmx = Math.floor(mousePos.x / this.gui.sqSize);\n            let newmy = Math.floor(mousePos.y / this.gui.sqSize);\n            \n            // if this is a new mouse position\n            if (this.gui.mouse == 1) {\n                this.gui.gx = this.gui.mx;\n                this.gui.gy = this.gui.my;\n                this.gui.startSearch();\n            }\n    \n            this.gui.mx = newmx;\n            this.gui.my = newmy;\n    \n        }, false);\n    \n        this.fg.addEventListener('mousedown', function (evt) {\n            let mousePos = this.gui.getMousePos(this, evt);\n            this.gui.mouse = evt.which;\n    \n            if (this.gui.mouse == 1) {\n                if (this.gui.omx != -1 && this.gui.omx == this.gui.gx && this.gui.omy == this.gui.gy) {\n                    this.gui.gx = this.gui.mx;\n                    this.gui.gy = this.gui.my;\n                    this.gui.startSearch();\n                } else {\n                    this.gui.omx = Math.floor(mousePos.x / this.gui.sqSize);\n                    this.gui.omy = Math.floor(mousePos.y / this.gui.sqSize);\n                    this.gui.gx = this.gui.mx;\n                    this.gui.gy = this.gui.my;\n                    this.gui.startSearch();\n                }\n            }\n    \n            if (this.gui.mouse == 2) {\n                this.gui.osize++;\n                if (this.gui.osize > this.gui.maxSize) { this.gui.osize = 1; }\n            }\n        }, false);\n    \n        this.fg.addEventListener('mouseup', function (e) {\n            this.gui.mouse = -1;\n            //this.omx = -1;\n            //this.omy = -1;\n        }, false);\n    \n        this.fg.oncontextmenu = function (e) {\n            e.preventDefault();\n        };\n    }\n\n    setAnimationSpeed(value) {\n        this.animspeed = parseInt(value);\n    }\n\n    setObjectSize(value) {\n        this.osize = parseInt(value);\n\t\tthis.startSearch();\n    }\n\n    setAStarWeight(value) {\n        this.config.weight = parseFloat(value);\n        this.startSearch();\n    }\n\n    setAStarTiebreak(value) {\n        this.config.tiebreak = value;\n        this.setAlgorithm(this.algorithm);\n    }\n\n    setHeuristic(value) {\n        this.config.heuristic = value;\n        this.setAlgorithm(this.algorithm);\n    }\n\n    setLegalActions(value) {\n        if (value == 'card') {\n            this.config.actions = [[0, 1], [0, -1], [1, 0], [-1, 0]];\n            this.config.actionCosts = [100, 100, 100, 100];\n        }\n        if (value == 'diag') {\n            this.config.actions = [ [1, 1], [-1, -1], [1, -1], [-1, 1], [0, 1], [0, -1], [1, 0], [-1, 0]];\n            this.config.actionCosts = [141, 141, 141, 141, 100, 100, 100, 100];\n        }\n        this.setAlgorithm(this.algorithm);\n    }\n\n    setMap(value) {\n        this.map = new Grid(document.getElementById(value).value); \n        this.sqSize = this.pixelWidth / this.map.width;\n        this.bg_ctx.clearRect(0, 0, this.pixelWidth, this.pixelHeight);\n        this.omx = -1;\n        this.omy = -1;\n        this.gx = -1;\n        this.gy = -1;\n        this.drawBackground();\n        this.drawGrid();\n        this.setAlgorithm(this.algorithm);\n    }\n\n    setAlgorithm() {\n        let t0 = performance.now();\n        this.pathTime = 0;\n        let algorithm = document.getElementById('selectalgorithm').value;\n        this.hideElements(['astartiebreak', 'astarweight']);\n        document.getElementById('heuristic').disabled = true;\n        if (algorithm == 'bfs') { \n            this.search = new Search_BFS(this.map, this.config); \n        } else if (algorithm == 'dfs') { \n            this.search = new Search_DFS(this.map, this.config); \n        } else if (algorithm == 'ucs') { \n            this.search = new Search_UCS(this.map, this.config); \n        } else if (algorithm == 'gbefs') { \n            this.search = new Search_GreedyBeFS(this.map, this.config); \n            document.getElementById('heuristic').disabled = false; \n        } else if (algorithm == 'astar') { \n            this.search = new Search_AStar(this.map, this.config); \n            this.showElements(['astartiebreak']);\n            document.getElementById('heuristic').disabled = false; \n        } else if (algorithm == 'student') { \n            this.search = new Search_Student(this.map, this.config); \n            document.getElementById('heuristic').disabled = false; \n        } else if (algorithm == 'wastar') { \n            this.search = new Search_WAStar(this.map, this.config); \n            this.showElements(['astarweight']);\n            document.getElementById('heuristic').disabled = false;\n        } else if (algorithm == 'jps'){\n            this.search = new Search_Student_JPS(this.map, this.config);\n            document.getElementById('heuristic').disabled = false; \n        }\n        let t1 = performance.now();\n        console.log(\"Search constructor time: \", t1-t0);\n        this.startSearch();\n    }\n\n    setDrawMethod() {\n        this.drawMethod = document.getElementById('drawMethodSelect').value;\n        this.hideElements(['StepButton', 'AnimSpeedSelect']);\n        if (this.drawMethod == 'info')      { this.showIterations = false; this.drawInfo = true; this.stepping = false;  }\n        else if (this.drawMethod == 'path') { this.showIterations = false; this.drawInfo = false; this.stepping = false;  }\n        else if (this.drawMethod == 'iter') { this.showIterations = true; this.drawInfo = true; this.stepping = false; this.showElements(['AnimSpeedSelect']); }\n        else if (this.drawMethod == 'step') { this.showIterations = true; this.drawInfo = true; this.stepping = true; this.showElements(['StepButton']); }\n    }\n\n    displaySearchInfo(div) {\n        \n        var algorithms = ['astar', 'ucs', 'wastar', 'gbefs', 'bfs', 'dfs'];\n        \n        this.detailedSearchHTML = \"<table border='1px black' width='400px'>\";\n        this.detailedSearchHTML += \"<tr><th>Search</th><th>Start</th><th>Goal</th><th>Cost</th><th>Closed</th><th>Time</th><th>Node/s</th></tr>\"\n        let closed = this.search.getClosed();\n        var nps = (this.pathTime == 0 || this.showIterations) ? '-' : Math.round(closed.length / this.pathTime) + ' k';\n        var rowHTML = \"<tr><td>\" + this.search.name + \"</td>\";\n        rowHTML += \"<td>\" + (this.omx == -1 ? '-' : \"(\" + this.omx + \",\" + this.omy + \")\") + \"</td>\";\n        rowHTML += \"<td>\" + (this.gx == -1 ? '-' : \"(\" + this.gx + \",\" + this.gy + \")\") + \"</td>\";\n        rowHTML += \"<td>\" + this.search.cost + \"</td>\";\n        rowHTML += \"<td>\" + closed.length + \"</td>\";\n        rowHTML += \"<td>\" + (this.showIterations ? '-' : this.pathTime.toFixed(4)) + \"</td><td>\" + nps + \"</td>\";\n        rowHTML += \"</tr>\";\n        this.detailedSearchHTML += rowHTML;\n        this.detailedSearchHTML += \"</table>\"\n        div.innerHTML = this.detailedSearchHTML;\n    }\n\n    startSearch() {\n        this.search.startSearch(this.omx, this.omy, this.gx, this.gy, this.osize);\n    }\n\n    setHTML() {\n\n        let top = 0;\n        let skip = 35;\n        this.createCanvas(this.map.width * this.sqSize + 1, this.map.height * this.sqSize + 1);\n        this.controlDiv = this.create('div', 'ButtonContainer', this.fg.width + 30, 0, 600, 7*skip);\n        this.testDiv = this.create('div', 'TestContainer', this.fg.width + 30, top + 7*skip + 10, 600, 100);\n        testContainer = this.testDiv;\n        \n        // Map Selection\n        this.addText(this.controlDiv, 'selectmaptext', 0, top, 150, 25, \"Environment Map:\");\n        this.addSelectBox(this.controlDiv, 'selectmap', 150, top, 250, 25, function() { this.gui.setMap(this.value); }, \n            [['defaultmap', 'Default (64 x 64)'], ['caves', 'Sparse Caves (128 x 128)'], ['bigcaves', 'Dense Caves (256 x 256)'], \n            ['64maze', 'Small Maze (64 x 64)'], ['128maze', 'Medium Maze (128 x 128)'], ['newlargemap', 'New Large Map (300 x 300)'], ['blankmap', 'Blank (32 x 32)'], ['lshapemap', 'L-Shape Wall (16 x 16)']]);\n\n        // Algorithm Selection \n        this.addText(this.controlDiv, 'selectalgorithmtext', 0, top + skip, 150, 25, \"Search Algorithm:\");\n        this.addSelectBox(this.controlDiv, 'selectalgorithm', 150, top + skip, 250, 25, function() { this.gui.setAlgorithm(); }, \n            [['jps','Student JPS'],['student', 'Student A*'], ['astar', 'Solution A*'], ['wastar', 'Weighted A*'], ['bfs', 'Breadth-First Search'], \n            ['dfs', 'Depth-First Search'], ['ucs', 'Uniform Cost Search'], ['gbefs', 'Greedy Best-First Search'] ]);\n\n        // A* Tie Break Selection\n        this.addSelectBox(this.controlDiv, 'astartiebreak', 425, top + skip, 125, 25, function() { this.gui.setAStarTiebreak(this.value); }, \n            [['lessh', 'Tiebreak Min H'], ['lessg', 'Tiebreak Min G'], ['fonly', 'Select Min F Only']]);\n\n        // A* Weight Selection \n        this.addSelectBox(this.controlDiv, 'astarweight', 425, top + skip, 125, 25, function() { this.gui.setAStarWeight(this.value); }, \n            [['1', '1x Heuristic'], ['1.1', '1.1x Heuristic'], ['1.5', '1.5x Heuristic'], ['2', '2x Heuristic'], ['4', '4x Heuristic'], ['8', '8x Heuristic']]);\n\n        // Object Size Selection \n        this.addText(this.controlDiv, 'objectsizetext', 0, top + 2*skip, 150, 25, \"Object Size:\");\n        this.addSelectBox(this.controlDiv, 'objectsize', 150, top + 2*skip, 250, 25, function() { this.gui.setObjectSize(this.value); }, \n            [['1', '1x1 Square'], ['2', '2x2 Square'], ['3', '3x3 Square']]);\n\n        // Legal Action Selection \n        this.addText(this.controlDiv, 'legalactionstext', 0, top + 3*skip, 150, 25, \"Legal Actions:\");\n        this.addSelectBox(this.controlDiv, 'legalactions', 150, top + 3*skip, 250, 25, function() { this.gui.setLegalActions(this.value); }, \n            [['diag', '8 Directions'], ['card', '4 Cardinal (Up, Down, Left, Right)']]);\n\n        // Heuristic Selection \n        this.addText(this.controlDiv, 'heuristictext', 0, top + 4*skip, 150, 25, \"Heuristic Function:\");\n        this.addSelectBox(this.controlDiv, 'heuristic', 150, top + 4*skip, 250, 25, function() { this.gui.setHeuristic(this.value); }, \n            [['diag', '8 Direction Manhattan'], ['card', '4 Direction Manhattan'], ['dist', '2D Euclidean Distance'], ['zero', 'Zero (No Heuristic)']]);\n\n        // Visualization Selection\n        this.addText(this.controlDiv, 'drawText', 0, top + 5*skip, 150, 25, \"Visualization:\");\n        this.addSelectBox(this.controlDiv, 'drawMethodSelect', 150, top + 5*skip, 250, 25, function() { this.gui.setDrawMethod(); }, \n            [['info', 'Instant Path + Open/Closed'], ['path', 'Instant Path Only'], ['iter', 'Animated Search'], ['step', 'Single Step']]);\n\n        // Animation Speed Selection\n        this.addSelectBox(this.controlDiv, 'AnimSpeedSelect', 425, top + 5*skip, 125, 25, function() { this.gui.setAnimationSpeed(this.value); }, \n            [['1', '1x Speed'], ['2', '2x Speed'],['4', '4x Speed'],['8', '8x Speed'],['16', '16x Speed'],['32', '32x Speed'],]);\n\n        // Buttons\n        this.addButton(this.controlDiv, 'ToogleGrid', 425,          top, 125, 25, \"Toggle Grid\",         function () { this.gui.showGrid = ! this.gui.showGrid; })\n        this.addButton(this.controlDiv, 'rerun',        0, top + 6*skip, 145, 25, \"Rerun Previous Path\", function () { this.gui.startSearch(); })\n        this.addButton(this.controlDiv, 'TestButton', 150, top + 6*skip, 120, 25, \"Run Tests\",           function () { test = 0; randomTests = false; RunTests(); })\n        this.addButton(this.controlDiv, 'TestButton', 275, top + 6*skip, 125, 25, \"Random Tests\",        function () { test = 0; randomTests = true; RunTests(); })\n        this.addButton(this.controlDiv, 'StepButton', 425, top + 5*skip, 125, 25, \"Single Step\",         function () { this.gui.step = true; })\n\n        let instructionsHTML  = \"<b>Search Visualization Instructions:</b><br>\";\n        instructionsHTML  += \"<ul>\";\n        instructionsHTML  += \"<li><font color='#ff0000'><b>LEFT CLICK AND DRAG TO SET START AND GOAL TILE</b></font></li>\";\n        instructionsHTML  += \"<li>Right Click a tile to see all tiles connected to that tile</li>\";\n        instructionsHTML  += \"<li>Object can only move through same color tiles in the grid</li>\";\n        instructionsHTML  += \"<li>Click any drop-down menu above to change the search settings</li>\";\n        instructionsHTML  += \"<li>Choose 'Animate Search' visualization to see real-time search progress</li>\";\n        instructionsHTML  += \"<li>Re-Run Previous - Performs previous search again (useful when animating)</li>\";\n        instructionsHTML  += \"<li>Assignment Tests - Performs Assignment Tests</li>\";\n        instructionsHTML  += \"<li>Random Tests - Performs Random Tests Tests</li>\";\n        instructionsHTML  += \"</ul>\";\n        instructionsHTML  += \"<b>Visualization Legend:</b><br>\";\n        instructionsHTML  += \"<ul>\";\n        instructionsHTML  += \"<li>Blue / Green / Grey Tile - Terrain type, object can move within a colour</li>\";\n        instructionsHTML  += \"<li>Red Tile - Node is in closed list (has been expanded)</li>\";\n        instructionsHTML  += \"<li>Orange Tile - Node is in open list (generated, but not expanded) </li>\";\n        instructionsHTML  += \"<li>White Tile - Node is on the generated path</li>\";\n        instructionsHTML  += \"<li>Pink Tile - Node is connected to the right-clicked tile</li>\";\n        instructionsHTML  += \"</ul>\";\n        this.testDiv.innerHTML  = instructionsHTML;\n    }\n}\n\n// Test-related global letiables, have to be done this way to enable real-time HTML updating during tests\nlet test = 0;\nlet startTiles = [[21, 3], [3, 33], [4, 50],  [2, 60], [4, 50],  [17,  0], [53, 43], [30, 33], [47,  0], [30, 34], \n                  [61, 14], [30, 34], [1, 1], [13, 8], [63, 58], [51, 23], [40, 30], [15, 32], [20, 10], [0,0]];\nlet endTiles   = [[46, 3], [3, 55], [13, 58], [28, 2], [13, 59], [60, 50], [30, 43], [54, 33], [60, 45], [55, 39], \n                  [10, 44], [55, 40], [5, 5], [63, 8], [63,  0], [51, 45], [20, 30], [18, 18], [40, 10], [63,63]];\nlet tableHeader = \"<table rules='all' width='400px'><tr><th>Test </th><th>Start</th><th>Goal</th><th colspan=2>Solution<br>Path</th><th colspan=2>Student<br>Path</th><th colspan=2>Student<br>Connected</th></tr>\";\nlet tableRows = \"\";\nlet tableEnd = \"\";\nlet studentPathCorrect = 0;\nlet studentConnectedCorrect = 0;\nlet solutionPathTime = 0;\nlet studentPathTime = 0;\nlet searchStudent = null;\nlet searchSolution = null;\nlet testContainer = null;\nlet randomTests = false;\nlet ggui = null;\n\nRunTests = function() {\n\n    if (test == 0) {\n        tableRows = \"\";\n        studentPathCorrect = 0;\n        studentConnectedCorrect = 0;\n        solutionPathTime = 0;\n        studentPathTime = 0;\n\n        searchStudent = new Search_Student(ggui.map, ggui.config);\n       \n        searchSolution = new Search_AStar(ggui.map, ggui.config);\n    }\n\n    if (test < startTiles.length) {\n        let start = [startTiles[test][0], startTiles[test][1]];\n        let end   = [endTiles[test][0], endTiles[test][1]];\n\n        if (randomTests) {\n            start[0] = Math.floor(Math.random() * ggui.map.width);\n            start[1] = Math.floor(Math.random() * ggui.map.height);\n            end[0] = Math.floor(Math.random() * ggui.map.width);\n            end[1] = Math.floor(Math.random() * ggui.map.height);\n        }\n\n        t0 = performance.now();\n        searchSolution.startSearch(start[0], start[1], end[0], end[1], ggui.osize);\n        while (searchSolution.inProgress) { searchSolution.searchIteration(); }\n        let solutionPath = searchSolution.path;\n        t1 = performance.now();\n        let solutionPathMS = Math.round(t1-t0);\n        solutionPathTime += solutionPathMS;\n\n        t0 = performance.now();\n        searchStudent.startSearch(start[0], start[1], end[0], end[1], ggui.osize);\n        while (searchStudent.inProgress) { searchStudent.searchIteration(); }\n        let studentPath = searchStudent.path;\n        t1 = performance.now();\n        let studentPathMS = Math.round(t1-t0);\n        studentPathTime += studentPathMS;\n\n        let studentCon = searchStudent.isConnected(start[0], start[1], end[0], end[1], ggui.osize);\n        let solutionCon = searchSolution.isConnected(start[0], start[1], end[0], end[1], ggui.osize);\n        \n        let pathColor = \"#ff0000\";\n        let conColor = \"#ff0000\";\n\n        if (searchStudent.cost == searchSolution.cost) {\n            studentPathCorrect++;\n            pathColor = \"#00aa00\"\n        }\n\n        if (studentCon == solutionCon) {\n            studentConnectedCorrect++;\n            conColor = \"#00aa00\"\n        }\n\n        tableRows += \"<tr><td>\" + (test+1) + \"</td><td>(\" + start[0] + \",\" + start[1] + \")</td><td>(\" + end[0] + \",\" + end[1] + \")</td><td>\"; \n        tableRows += searchSolution.cost +\"</td><td>\" + solutionPathMS + \"</td>\";\n        tableRows += \"<td><font color='\" + pathColor + \"'>\" + searchStudent.cost + \"</font></td><td>\" + studentPathMS + \"</td>\";\n        tableRows += \"<td><font color='\" + conColor + \"'>\" + (studentCon ? 'true' : 'false') + \"</font></td></tr>\";\n\n        tableEnd =  \"<tr><td>Total</td><td>-</td><td>-</td><td>-</td><td>\" + solutionPathTime + \"</td>\";\n        tableEnd += \"<td>\" + studentPathCorrect + \"/\" + (test+1) + \"</td><td>\" + studentPathTime + \"</td>\";\n        tableEnd += \"<td>\" + studentConnectedCorrect + \"/\" + (test+1) + \"</tr>\";\n\n        testContainer.innerHTML = tableHeader + tableRows + tableEnd + '</table>';\n        setTimeout(\"RunTests();\", 1);\n    } \n\n    test++;\n}\n","/Users/sloane/Documents/Code/Portfolio-App/src/projects/pathfinding/Search_Student.js",["361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379"],"// Search_Student.js \n// Computer Science 3200 - Assignment 2\n// Author(s): Yimiao Zhang 201803269 Zuchi Zheng 201503869\n\nclass Search_Student {\n\n    constructor(grid, config) {\n        this.config = config;       // search configuration object\n                                    //   config.actions = array of legal [x, y] actions\n                                    //   config.actionCosts[i] = cost of config.actions[i]\n                                    //   config.heuristic = 'diag', 'card', 'dist', or 'zero'\n        this.name = \"Student\";\n        this.grid = grid;           // the grid we are using to search\n        this.sx = -1;               // x location of the start state\n        this.sy = -1;               // y location of the start state\n        this.gx = -1;               // x location of the goal state\n        this.gy = -1;               // y location of the goal state\n        this.size = 1;              // the square side length (size) of the agent\n        this.maxSize = 3;           // the maximum size of an agent\n\n        this.inProgress = false;    // whether the search is in progress\n        this.expanded = 0;          // number of nodes expanded (drawn in GUI)\n\n        this.path = [];             // the path, if the search found one\n        this.open = [];             // the current open list of the search (stores Nodes)\n        this.closed = [];           // the current closed list of the search\n        this.cost = 'Search Not Completed'; // the cost of the path found, -1 if no path\n        this.objectSize= 1;\n        this.computeSectors();\n    }\n    \n    //set up all the necessary data structures to begin a new search\n    startSearch(sx, sy, gx, gy, size) {\n        // deals with an edge-case with the GUI, leave this line here\n        if (sx == -1 || gx == -1) { return; }\n\n        this.inProgress = true;     // the search is now considered started\n        this.sx = sx;               // set the x,y location of the start state\n        this.sy = sy;\n        this.gx = gx;               // set the x,y location of the goal state\n        this.gy = gy;\n        this.size = size;           // the size of the agent\n        this.path = [];             // set an empty path\n        this.open = [];\n        this.closed = [];\n        this.objectSize = size;\n        let h = this.estimateCost(sx, sy, gx, gy);\n        let firstNode = new Node(sx, sy, null, [0, 0], 0, h);\n        \n        this.addOpen(firstNode);\n    \n    }\n\n    //compute and return the heuristic function h(n) of a given start location to a given goal location.\n    estimateCost(x, y, gx, gy) {  \n        let abx = Math.abs(gx - x);\n        let aby = Math.abs(gy - y);\n        // compute and return the diagonal manhattan distance heuristic\n        if (this.config.heuristic == 'diag') {\n            return (abx + aby) * 100 - Math.min(abx, aby) * (200 - 141);  \n        // compute and return the 4 directional (cardinal) manhattan distance\n        } else if (this.config.heuristic == 'card') {\n            return (abx + aby) * 100;\n        // compute and return the 2D euclidian distance (Pythagorus)\n        } else if (this.config.heuristic == 'dist') {\n            let distx = abx * abx;\n            let disty = aby * aby;\n            return (Math.sqrt(distx+disty)) * 100;\n        // return zero heuristic\n        } else if (this.config.heuristic == 'zero') {\n            return 0;\n        }\n    }\n\n\n\n    //return whether or not the two given locations are connected\n    isConnected(x1, y1, x2, y2, size) {\n        if ((this.sectors[size][x1][y1] == this.sectors[size][x2][y2]) && (this.sectors[size][x1][y1] != 0)){\n            return true;\n        }\n        return false;   \n    }\n\n    //return whether or not the given action is able to be performed from the given (x,y) location.\n    isLegalAction(x, y, size, action) {\n        let nx = x + action[0];\n        let ny = y + action[1];\n        if((this.grid.isOOB(x,y,size)) || this.grid.isOOB(nx, ny, size)){\n            return false;\n        }\n        \n        if( this.grid.get(x,y) != this.grid.get(nx, ny) ){\n            return false;\n        }\n        if(this.isConnected(x,y,nx,ny,size) && this.isConnected(x,y,x,ny,size) && this.isConnected(x,y,nx,y,size)){\n            return true;\n        }\n        return false;\n    }\n\n\n    //compute and store the connected sectors\n    computeSectors() {\n        //initialize empty sectors array\n        this.sectors = [];\n        for (let s = 0; s <= this.maxSize; s++) {\n            let temp = [];\n            for (let w = 0; w < this.grid.width; w++) {\n                temp[w] = [];\n                for (let h = 0; h < this.grid.height; h++) {\n                    temp[w][h] = 0;\n                }\n            }\n            this.sectors[s] = temp;\n        }\n        \n        //set up sectorNumbers array \n        this.sectorNumber = [1, 1, 1, 1];\n\n        for (let s = 1; s <= this.maxSize; s++) {\n            for (let w = 0; w < this.grid.width; w++) {\n                for (let h = 0; h < this.grid.height; h++) {\n\n                    let sectorOpen = [[w, h]];\n                    let gridNum = this.grid.get(w,h);\n                    // for loop go through sector's every single location\n                    for (let i = 0; i < sectorOpen.length; i++) {\n                        //continue if the grid is out of boundary\n                        if (this.grid.isOOB(sectorOpen[i][0], sectorOpen[i][1], s)) {\n                            continue;\n                        }\n                        //check if the grid values are the same\n                        if (gridNum != this.grid.get(sectorOpen[i][0], sectorOpen[i][1])){\n                            continue;\n                        }\n                        //stop if it has been assigned value before\n                        if (this.getSector(s, sectorOpen[i][0], sectorOpen[i][1]) != 0) {\n                            continue;\n                        }\n                        //check if the current location can fit \n                        if (!this.canFit(sectorOpen[i][0], sectorOpen[i][1], s)) {\n                            continue;\n                        }\n                        //assign sectorNumber to the sector \n                        this.sectors[s][sectorOpen[i][0]][sectorOpen[i][1]] = this.sectorNumber[s];\n\n                        //4 cardinal actions\n                        let allActions = [[1,0], [-1,0],[0,1],[0,-1]];\n                        for(let j = 0; j < allActions.length; j++){\n                            sectorOpen.push([sectorOpen[i][0] + allActions[j][0], sectorOpen[i][1] + allActions[j][1]]);\n\n                        }   \n\n                    }\n                //increase the sector number if the sector number has been used to assign to location \n                    if(!(sectorOpen.length <=1)){\n                        this.sectorNumber[s]++;\n                    }\n                }\n            }\n    \n        }\n    }\n    //return sectors location\n    getSector(size, x, y) {\n        return this.sectors[size][x][y];\n    }\n    \n    canFit(x, y, size) {\n        let gridNum = this.grid.get(x, y);\n        let s = size;\n        //horizontal\n        for(let i = 0; i < s; i++){\n            //vertical\n            for(let j = 0; j < s; j++)\n                if ( gridNum != this.grid.get(x+i, y+j)){\n            return false;\n            }\n        }\n        return true;\n    }\n\n    \n    //performs one iteration of search\n    searchIteration() {\n        \n        // if we've already finished the search, do nothing\n        if (!this.inProgress) { return; }\n\n        //if open list is empty, do nothing\n        if(this.openSize() <= 0){\n            this.inProgress = false;\n            this.path = [];\n            this.cost = -1;\n            return;\n        }\n        //check if the start and end goals are connected\n        if (!this.isConnected(this.sx, this.sy, this.gx, this.gy, this.objectSize)) { \n            this.inProgress = false; \n            this.cost = -1; \n            return; \n        }\n\n        //remove the node from the open list\n        let minIndex = this.getMinNodeIndex(this.open);\n        //let currentNode = new Node();\n        let currentNode = this.open[minIndex];\n        this.open.splice(minIndex,1);\n\n        //if found the goal, return path\n        if(this.findGoal(currentNode.x, currentNode.y)){\n            this.path = this.buildPath(currentNode);\n            this.cost = currentNode.g;\n            this.inProgress = false;          \n            return;\n        }\n\n        //check if the node is on the closed list\n        if(this.checkClosed(currentNode)){\n            return;\n        }\n        //add the node to the closed list\n        this.addClosed(currentNode);\n\n        let currentx = currentNode.x;\n        let currenty = currentNode.y;\n        let currentg = currentNode.g;\n\n        \n        for (var i = 0; i < this.config.actions.length; i++) {\n            if (this.isLegalAction(currentx, currenty, this.objectSize, this.config.actions[i])) {\n                let nx = currentx + this.config.actions[i][0];\n                let ny = currenty + this.config.actions[i][1];\n                let ng = currentg + this.config.actionCosts[i];\n                let nh = this.estimateCost(nx, ny, this.gx, this.gy);\n                let newNode = new Node(nx, ny, currentNode, this.config.actions[i], ng, nh);      \n\n                this.addOpen(newNode);\n                \n            }\n        }\n\n    }\n\n    //returns the open list states\n    getOpen() {\n        let tempList = [];\n        for (let i = 0; i < this.open.length; i++) {\n            tempList.push([this.open[i].x, this.open[i].y]);\n        }\n        return tempList;\n    }\n    //add the node to the open list\n    addOpen(n){\n        this.open.push(n);\n    }\n    //return the length of the open list\n    openSize(){\n        return this.open.length;\n    }\n\n    //check if the node is on the open list\n    checkOpen(node){\n        for (let i = 0; i< this.open.length; i++){\n            if ( node.x == this.open[i].x && node.y == this.open[i].y){\n                return true;\n            }\n        } \n        return false;\n    }\n\n    // return the closed list states\n    getClosed() {\n        let tempList = [];\n        for (let i =0; i < this.closed.length; i++){\n            tempList.push([this.closed[i].x,this.closed[i].y]);\n        }\n        return tempList;\n    }\n    //add the node to the closed list\n    addClosed(node){\n        this.closed.push(node);\n    }\n    //check if the node is in the closed list\n    checkClosed(node){\n        for (let i = 0; i< this.closed.length; i++){\n            if (node.x == this.closed[i].x && node.y == this.closed[i].y){\n                return true;\n            }\n        } \n        return false;\n    }\n    //return the index of node with the smallest heuristic function value\n    getMinNodeIndex(list){\n        let minIndex = 0;\n        let minNum = list[0].g + list[0].h;\n        for(let i = 0; i < list.length; i++){\n            if ( (list[i].g + list[i].h) < minNum){\n                minNum = list[i].g + list[i].h;\n                minIndex = i;\n            }\n        }\n        return minIndex;    \n    }\n    //check if the node is the goal \n    findGoal(nodex, nodey){\n        if((nodex == this.gx) && (nodey == this.gy)){\n            return true;\n        }\n        return false;\n    }    \n    //return a list of action\n    buildPath(p){\n        let list = [];\n        while(p.parent != null){\n            list.push(p.action);\n            p = p.parent;\n        }\n        list.reverse();\n        return list;\n    }\n\n}\n\n\nclass Node {\n    constructor(x, y, parent, action, g, h) {\n        this.x = x;\n        this.y = y;\n        this.action = action;\n        this.parent = parent;\n        this.g = g;\n        this.h = h;\n    }\n}","/Users/sloane/Documents/Code/Portfolio-App/src/setupTests.js",[],"/Users/sloane/Documents/Code/Portfolio-App/src/projects/pathfinding/Search_Student_JPS.js",["380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419"],"// Search_Student.js \n// Computer Science 3200 - Final Project \n// Author(s): Yimiao Zhang (201803269) Zuchi Zheng (201503869)\n\nclass Search_Student_JPS{\n\n    constructor(grid, config) {\n        this.config = config;       // search configuration object\n                                    //   config.actions = array of legal [x, y] actions\n                                    //   config.actionCosts[i] = cost of config.actions[i]\n                                    //   config.heuristic = 'diag', 'card', 'dist', or 'zero'\n        this.name = \"jps\";\n        this.grid = grid;           // the grid we are using to search\n        this.sx = -1;               // x location of the start state\n        this.sy = -1;               // y location of the start state\n        this.gx = -1;               // x location of the goal state\n        this.gy = -1;               // y location of the goal state\n        this.size = 1;              // the square side length (size) of the agent\n        this.maxSize = 3;           // the maximum size of an agent\n\n        this.inProgress = false;    // whether the search is in progress\n        this.expanded = 0;          // number of nodes expanded (drawn in GUI)\n\n        this.map = [];\n        this.path = [];             // the path, if the search found one\n        this.open = [];             // the current open list of the search \n        this.closed = [];           // the current closed list of the search\n        this.ignore = [];           // list that contains ignored nodes\n        this.cost = 'Search Not Completed';   // the cost of the path found, -1 if no path\n        this.objectSize= 1;\n        this.computeSectors();\n        this.currentNode;\n    }\n    \n    //set up all the necessary data structures to begin a new search\n    startSearch(sx, sy, gx, gy, size) {\n        // deals with an edge-case with the GUI, leave this line here\n        if (sx == -1 || gx == -1) { return; }\n        this.cost = -1;\n\n        this.inProgress = true;     // the search is now considered started\n        this.sx = sx;               // set the x,y location of the start state\n        this.sy = sy;\n        this.gx = gx;               // set the x,y location of the goal state\n        this.gy = gy;\n        this.size = size;           // the size of the agent\n        this.path = [];             // set an empty path\n        this.open = [];\n        this.closed = [];\n        this.objectSize = size;\n        let h = this.estimateCost(sx, sy, gx, gy);\n        let firstNode = new NodeV(sx, sy, null, null, 0, h, null);\n        this.addOpen(firstNode);\n        \n    }\n\n    //compute and return the heuristic function h(n) of a given start location to a given goal location.\n    estimateCost(x, y, gx, gy) {  \n        let abx = Math.abs(gx - x);\n        let aby = Math.abs(gy - y);\n        // compute and return the diagonal manhattan distance heuristic\n        if (this.config.heuristic == 'diag') {\n            return (abx + aby) * 100 - Math.min(abx, aby) * (200 - 141);  \n        // compute and return the 4 directional (cardinal) manhattan distance\n        } else if (this.config.heuristic == 'card') {\n            return (abx + aby) * 100;\n        // compute and return the 2D euclidian distance (Pythagorus)\n        } else if (this.config.heuristic == 'dist') {\n            let distx = abx * abx;\n            let disty = aby * aby;\n            return (Math.sqrt(distx+disty)) * 100;\n        // return zero heuristic\n        } else if (this.config.heuristic == 'zero') {\n            return 0;\n        }\n    }\n\n    //return whether or not the two given locations are connected\n    isConnected(x1, y1, x2, y2, size) {\n        if ((this.map[size][x1][y1] == this.map[size][x2][y2]) && (this.map[size][x1][y1] != 0)){\n            return true;\n        }\n        return false;  \n    }\n\n    //return whether or not the given action is able to be performed from the given (x,y) location.\n    isLegalAction(x, y, size, action) {\n        let nx = x + action[0];\n        let ny = y + action[1];\n        if((this.grid.isOOB(x,y,size)) || this.grid.isOOB(nx, ny, size)){\n            return false;\n        }\n        //if( this.grid.get(x,y) != this.grid.get(nx, ny) ){\n        //    return false;\n        //}\n        if (action[0] == 0 || action[1] == 0) {\n            if(this.isConnected(x,y,x,ny,size) && this.isConnected(x,y,nx,y,size)){\n                return true;\n            }\n        }\n        else{\n            if(this.isConnected(x,y,nx,ny,size)){\n                return true;\n            }\n        }\n        return false;\n\n    }\n    //compute and store the connected sectors\n    computeSectors() {\n        //initialize empty sectors array\n        this.map = [];\n        for (let s = 0; s <= this.maxSize; s++) {\n            let temp = [];\n            for (let w = 0; w < this.grid.width; w++) {\n                temp[w] = [];\n                for (let h = 0; h < this.grid.height; h++) {\n                    temp[w][h] = 0;\n                }\n            }\n            this.map[s] = temp;\n        }\n    \n        //set up sectorNumbers array \n        this.sectorNumber = [1, 1, 1, 1];\n\n        for (let s = 1; s <= this.maxSize; s++) {\n            for (let w = 0; w < this.grid.width; w++) {\n                for (let h = 0; h < this.grid.height; h++) {\n\n                    let sectorOpen = [[w, h]];\n                    let gridNum = this.grid.get(w,h);\n                    // for loop go through sector's every single location\n                    for (let i = 0; i < sectorOpen.length; i++) {\n                        //continue if the grid is out of boundary\n                        if (this.grid.isOOB(sectorOpen[i][0], sectorOpen[i][1], s)) {\n                            continue;\n                        }\n                        //check if the grid values are the same\n                        if (gridNum != this.grid.get(sectorOpen[i][0], sectorOpen[i][1])){\n                            continue;\n                        }\n                        //stop if it has been assigned value before\n                        if (this.getSector(s, sectorOpen[i][0], sectorOpen[i][1]) != 0) {\n                            continue;\n                        }\n                        //check if the current location can fit \n                        if (!this.canFit(sectorOpen[i][0], sectorOpen[i][1], s)) {\n                            continue;\n                        }\n                        //assign sectorNumber to the sector \n                        this.map[s][sectorOpen[i][0]][sectorOpen[i][1]] = this.sectorNumber[s];\n\n                        //4 cardinal actions\n                        let allActions = [[1,0], [-1,0],[0,1],[0,-1]];\n                        for(let j = 0; j < allActions.length; j++){\n                            sectorOpen.push([sectorOpen[i][0] + allActions[j][0], sectorOpen[i][1] + allActions[j][1]]);\n                        }   \n                    }\n                //increase the sector number if the sector number has been used to assign to location \n                    if(!(sectorOpen.length <=1)){\n                        this.sectorNumber[s]++;\n                    }\n                }\n            }    \n        }\n    }\n\n    //return sectors location\n    getSector(size, x, y) {\n        return this.map[size][x][y];\n    }\n    \n    canFit(x, y, size) {\n\t\tfor (let i = x; i < (size + x) - 1; i++) {\n\t\t\tfor (let j = y; j < (size + y) - 1; j++) {\n\t\t\t\tif (this.grid.get(i, j) != this.grid.get(i+1, j) || this.grid.get(i, j) != this.grid.get(i, j+1) || this.grid.get(i, j) != this.grid.get(i+1, j+1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n    \treturn true;\n    }\n\n    \n    //performs one iteration of search\n    searchIteration() {\n        // if we've already finished the search, do nothing\n        if (!this.inProgress) { return; }\n        //check if the start and end goals are connected\n        if (!this.isConnected(this.sx, this.sy, this.gx, this.gy, this.objectSize)) {   \n            this.inProgress = false; \n            return; \n        }\n        //if open list is empty, do nothing\n        if(this.open.length == 0){\n            this.path = [];\n            this.inProgress = false;\n            return;\n        }\n        //remove the node from the open list\n        let minIndex = this.getMinIndex(this.open);\n        this.currentNode = this.open[minIndex];\n        this.open.splice(minIndex,1);\n        //if found the goal, return path\n        if(this.findGoal(this.currentNode.x, this.currentNode.y)){\n            var nodeOfPath = this.currentNode;\n            this.cost = nodeOfPath.g;\n            while (nodeOfPath.parent != null) {\n                for (let i = 0; i < nodeOfPath.action.length; i++) {\n                    this.path.splice(0, 0, nodeOfPath.action[i]);\n                }\n                nodeOfPath = nodeOfPath.parent;\n            }\n            this.inProgress = false;          \n            return;\n        }\n        //check if the node is on the closed list\n        if(this.checkClosed(this.currentNode)){\n            return;\n        }\n        //add the node to the closed list\n        this.addClosed(this.currentNode);\n        \n        if(this.currentNode.parent == null){\n            var tempActions = this.config.actions;\n        }\n        else{\n            // ignore certain actions\n            var tempActions = this.ignoreActions(this.currentNode);\n        }\n        // search horizontal and vertical direction\n        this.cardinalSearch(this.currentNode, tempActions);\n        // search diagonal direction\n        this.diagonalSearch(this.currentNode, tempActions);\n    }\n\n    // search in cardinal directions\n    cardinalSearch(node, actions) {\n        for (let a = 0; a < actions.length; a++) {\n            // if the action is not diagonal\n            if (actions[a][0] == 0 || actions[a][1] == 0) {\n                var found  = false;\n                var actionsOfPath = [];\n                var curNode = node;\n                while (!found) {\n                    if (this.isLegalAction(curNode.x, curNode.y, this.objectSize, actions[a])) {\n                        actionsOfPath.push(actions[a]);\n                        var nNode = this.setNewNode(curNode, actionsOfPath, node);\n                        curNode = nNode;\n                        // add the node to the open list and stop searching if the node is the goal node\n                        if (curNode.x == this.gx && curNode.y == this.gy) {\n                            if (node.x == this.currentNode.x && node.y == this.currentNode.y) {\n                                this.open.push(curNode);\n                            }\n                            else {\n                                return true;\n                            }\n                            found = true;\n                        }\n                        // continue to search if the node is not the goal\n                        else {\n                            this.ignore.push(curNode);\n                            // check if the node has a forced neighbor\n                            var direction = this.findForcedNeighbour(curNode, actions[a]);   \n                            if (direction != null) {\n                                if (node.x == this.currentNode.x && node.y == this.currentNode.y) {\n                                    curNode.direction = direction;\n                                    this.open.push(curNode);\n                                }\n                                else {\n                                    return true;\n                                }\n                                found = true;\n                            }\n                        }\n                    }\n                    // stop searching if the node encounters an obstcale\n                    else {\n                        found = true;\n                    }\n                }\n            }\n        }\n        return false;       \n    }\n    //search diagonal direction\n    diagonalSearch(node, actions) {\n        for (let a = 0; a < actions.length; a++) {\n            // if the action is diagonal \n            if ( actions[a][0] != 0 && actions[a][1] != 0 ) {\n                var found = false;\n                var actionsOfPath = [];\n                var curNode = node;\n                while (!found) {\n                    if (this.isLegalAction(curNode.x, curNode.y, this.objectSize, actions[a])) {\n                        actionsOfPath.push(actions[a]);   \n                        let nNode = this.setNewNode(curNode, actionsOfPath, node);\n                        curNode = nNode;\n                        // add the node to the open list and stop searching if the node is the goal node\n                        if (curNode.x == this.gx && curNode.y == this.gy) {                            \n                            this.open.push(curNode);\n                            found = true;\n                        }\n                        // continue to search if the node is not the goal\n                        else {\n                            this.ignore.push(curNode);\n                            // check if the node has a forced neighbor\n                            let direction = this.findForcedNeighbour(curNode, actions[a]);\n                            \n                            if (direction != null) {\n                                curNode.direction = direction;\n                                this.open.push(curNode);\n                                found = true;\n                            }\n                            // search cardinal directions\n                            var tempActions = [[actions[a][0], 0],[0, actions[a][1]]];\n                            // add the node into the open list if find forced neighbor\n                            if (this.cardinalSearch(curNode, tempActions)) {\n                                curNode.direction =  actions[a];\n                                this.open.push(curNode);\n                                found = true;\n                            } \n                        }\n                    }\n                    // if it reach to the bound or obstcale, stop the searching\n                    else {\n                        found = true;\n                    }\n                } \n            }\n            \n        }\n    } \n\n    //find the forced neighbour\n    findForcedNeighbour(node, action) {\n        if (action[0] == 0) {\n            if (!this.isLegalAction(node.x, node.y, this.objectSize, [1,0]) && this.isLegalAction(node.x, node.y, this.objectSize, [1,action[1]])) {\n                return [1, action[1]];\n            }\n            else if (!this.isLegalAction(node.x, node.y, this.objectSize, [-1,0]) && this.isLegalAction(node.x, node.y, this.objectSize, [-1,action[1]])) {\n                return [-1,action[1]];\n            }\n        }\n        else if (action[1] == 0) {\n            if (!this.isLegalAction(node.x, node.y, this.objectSize, [0,1]) && this.isLegalAction(node.x, node.y, this.objectSize, [action[0],1])) {\n                return [action[0],1];\n            } \n            else if (!this.isLegalAction(node.x, node.y, this.objectSize, [0,-1]) && this.isLegalAction(node.x, node.y, this.objectSize, [action[0],-1])) {\n                return [action[0],-1];\n            }\n        }\n        else {\n            if (!this.isLegalAction(node.x, node.y, this.objectSize, [-action[0],0]) && this.isLegalAction(node.x, node.y, this.objectSize, [-action[0],action[1]])) {\n                return [-action[0],action[1]];\n            } \n            else if(!this.isLegalAction(node.x, node.y, this.objectSize, [0,-action[1]]) && this.isLegalAction(node.x, node.y, this.objectSize, [action[0],-action[1]])) {\n                return [action[0],-action[1]];\n            }\n        }\n        return null;\n    }\n\n    //construct a new node\n    setNewNode(node, action, parent) {\n        let nx = node.x + action[action.length - 1][0];\n        let ny = node.y + action[action.length - 1][1];\n        let currAction = [];\n        let actionIndex = 0;\n        for (var i = 0; i < this.config.actions.length; i++) {\n            if (this.config.actions[i][1] == action[0][1] &&  this.config.actions[i][0] == action[0][0] ) {\n                actionIndex = i;\n            }\n        }\n        let g = this.config.actionCosts[actionIndex] * action.length;\n        for (var i = 0; i < action.length; i++) {\n            currAction.push(action[i]);  \n        }\n        let h = this.estimateCost(nx, ny, this.gx, this.gy);\n        let nNode = new NodeV(nx, ny, parent, currAction, g, h, null);\n        return nNode;\n    }\n    //jump certain nodes\n    ignoreActions(child) {\n        let actions = []\n        let action1 = child.direction[0];\n        let action2 = child.direction[1];\n        actions.push([action1, action2]); \n        actions.push([action1, 0]);\n        actions.push([0, action2]);\n        return actions;\n    }\n\n    //return the ignored list\n    getIgnore() {\n        return this.ignore;\n    }\n\n\n    //return the open list states\n    getOpen() {\n        let tempList = [];\n        for (let i = 0; i < this.open.length; i++) {\n            tempList.push([this.open[i].x, this.open[i].y]);\n        }\n        return tempList;\n    }\n    //add the node to the open list\n    addOpen(n){\n        this.open.push(n);\n    }\n    //return closed list\n    getClosed(){\n        let tempList = [];\n        for (let i =0; i < this.closed.length; i++){\n            tempList.push([this.closed[i].x,this.closed[i].y]);\n        }\n        return tempList;\n    }\n    //add the node to the closed list\n    addClosed(node){\n        this.closed.push(node);\n    }\n    //check if the node is in the closed list\n    checkClosed(node){\n        for (let i = 0; i< this.closed.length; i++){\n            if (node.x == this.closed[i].x && node.y == this.closed[i].y){\n                return true;\n            }\n        } \n        return false;\n    }\n    //return the index of the node with the smallest heuristic value\n    getMinIndex(list){\n        let minIndex = 0;\n        let minNum = list[0].g + list[0].h;\n        for(let i = 0; i < list.length; i++){\n            if ( (list[i].g + list[i].h) < minNum){\n                minNum = list[i].g + list[i].h;\n                minIndex = i;\n            }\n        }\n        return minIndex;    \n    }\n    //check if the node is the goal \n    findGoal(nodex, nodey){\n        if((nodex == this.gx) && (nodey == this.gy)){\n            return true;\n        }\n        return false;\n    }    \n}\n\nclass NodeV {\n    constructor(x, y, parent, action, g, h, direction) {\n        this.x = x;\n        this.y = y;\n        this.action = action;\n        this.parent = parent;\n        this.g = g;\n        this.h = h;\n        this.direction = direction;\n\n    }\n}",{"ruleId":"420","replacedBy":"421"},{"ruleId":"422","replacedBy":"423"},{"ruleId":"424","severity":1,"message":"425","line":5,"column":10,"nodeType":"426","messageId":"427","endLine":5,"endColumn":25},{"ruleId":"424","severity":1,"message":"428","line":6,"column":9,"nodeType":"426","messageId":"427","endLine":6,"endColumn":21},{"ruleId":"429","severity":1,"message":"430","line":45,"column":21,"nodeType":"431","endLine":45,"endColumn":83},{"ruleId":"429","severity":1,"message":"430","line":50,"column":21,"nodeType":"431","endLine":50,"endColumn":86},{"ruleId":"429","severity":1,"message":"430","line":54,"column":21,"nodeType":"431","endLine":54,"endColumn":83},{"ruleId":"429","severity":1,"message":"430","line":58,"column":21,"nodeType":"431","endLine":58,"endColumn":80},{"ruleId":"424","severity":1,"message":"432","line":4,"column":10,"nodeType":"426","messageId":"427","endLine":4,"endColumn":18},{"ruleId":"424","severity":1,"message":"425","line":5,"column":10,"nodeType":"426","messageId":"427","endLine":5,"endColumn":25},{"ruleId":"424","severity":1,"message":"428","line":6,"column":9,"nodeType":"426","messageId":"427","endLine":6,"endColumn":21},{"ruleId":"424","severity":1,"message":"433","line":7,"column":8,"nodeType":"426","messageId":"427","endLine":7,"endColumn":14},{"ruleId":"429","severity":1,"message":"430","line":38,"column":13,"nodeType":"431","endLine":38,"endColumn":75},{"ruleId":"424","severity":1,"message":"432","line":4,"column":10,"nodeType":"426","messageId":"427","endLine":4,"endColumn":18},{"ruleId":"424","severity":1,"message":"425","line":5,"column":10,"nodeType":"426","messageId":"427","endLine":5,"endColumn":25},{"ruleId":"424","severity":1,"message":"428","line":6,"column":9,"nodeType":"426","messageId":"427","endLine":6,"endColumn":21},{"ruleId":"424","severity":1,"message":"433","line":7,"column":8,"nodeType":"426","messageId":"427","endLine":7,"endColumn":14},{"ruleId":"429","severity":1,"message":"430","line":58,"column":13,"nodeType":"431","endLine":58,"endColumn":79},{"ruleId":"434","severity":1,"message":"435","line":289,"column":13,"nodeType":"431","endLine":289,"endColumn":52},{"ruleId":"429","severity":1,"message":"430","line":290,"column":13,"nodeType":"431","endLine":290,"endColumn":69},{"ruleId":"424","severity":1,"message":"436","line":4,"column":8,"nodeType":"426","messageId":"427","endLine":4,"endColumn":14},{"ruleId":"424","severity":1,"message":"437","line":5,"column":8,"nodeType":"426","messageId":"427","endLine":5,"endColumn":15},{"ruleId":"424","severity":1,"message":"438","line":6,"column":8,"nodeType":"426","messageId":"427","endLine":6,"endColumn":16},{"ruleId":"424","severity":1,"message":"439","line":7,"column":8,"nodeType":"426","messageId":"427","endLine":7,"endColumn":18},{"ruleId":"424","severity":1,"message":"440","line":8,"column":8,"nodeType":"426","messageId":"427","endLine":8,"endColumn":17},{"ruleId":"424","severity":1,"message":"441","line":9,"column":8,"nodeType":"426","messageId":"427","endLine":9,"endColumn":20},{"ruleId":"424","severity":1,"message":"442","line":10,"column":8,"nodeType":"426","messageId":"427","endLine":10,"endColumn":16},{"ruleId":"424","severity":1,"message":"443","line":11,"column":8,"nodeType":"426","messageId":"427","endLine":11,"endColumn":14},{"ruleId":"424","severity":1,"message":"444","line":12,"column":28,"nodeType":"426","messageId":"427","endLine":12,"endColumn":37},{"ruleId":"424","severity":1,"message":"445","line":12,"column":39,"nodeType":"426","messageId":"427","endLine":12,"endColumn":47},{"ruleId":"424","severity":1,"message":"446","line":12,"column":49,"nodeType":"426","messageId":"427","endLine":12,"endColumn":58},{"ruleId":"424","severity":1,"message":"447","line":13,"column":8,"nodeType":"426","messageId":"427","endLine":13,"endColumn":13},{"ruleId":"424","severity":1,"message":"448","line":14,"column":16,"nodeType":"426","messageId":"427","endLine":14,"endColumn":29},{"ruleId":"424","severity":1,"message":"449","line":14,"column":31,"nodeType":"426","messageId":"427","endLine":14,"endColumn":36},{"ruleId":"424","severity":1,"message":"450","line":14,"column":38,"nodeType":"426","messageId":"427","endLine":14,"endColumn":44},{"ruleId":"424","severity":1,"message":"425","line":15,"column":10,"nodeType":"426","messageId":"427","endLine":15,"endColumn":25},{"ruleId":"424","severity":1,"message":"451","line":16,"column":10,"nodeType":"426","messageId":"427","endLine":16,"endColumn":18},{"ruleId":"424","severity":1,"message":"452","line":17,"column":10,"nodeType":"426","messageId":"427","endLine":17,"endColumn":20},{"ruleId":"424","severity":1,"message":"453","line":18,"column":10,"nodeType":"426","messageId":"427","endLine":18,"endColumn":19},{"ruleId":"424","severity":1,"message":"454","line":18,"column":21,"nodeType":"426","messageId":"427","endLine":18,"endColumn":27},{"ruleId":"424","severity":1,"message":"455","line":18,"column":29,"nodeType":"426","messageId":"427","endLine":18,"endColumn":36},{"ruleId":"424","severity":1,"message":"456","line":18,"column":38,"nodeType":"426","messageId":"427","endLine":18,"endColumn":42},{"ruleId":"424","severity":1,"message":"457","line":18,"column":44,"nodeType":"426","messageId":"427","endLine":18,"endColumn":52},{"ruleId":"424","severity":1,"message":"458","line":18,"column":54,"nodeType":"426","messageId":"427","endLine":18,"endColumn":63},{"ruleId":"424","severity":1,"message":"459","line":18,"column":65,"nodeType":"426","messageId":"427","endLine":18,"endColumn":73},{"ruleId":"424","severity":1,"message":"460","line":19,"column":25,"nodeType":"426","messageId":"427","endLine":19,"endColumn":46},{"ruleId":"424","severity":1,"message":"461","line":19,"column":48,"nodeType":"426","messageId":"427","endLine":19,"endColumn":67},{"ruleId":"424","severity":1,"message":"462","line":21,"column":8,"nodeType":"426","messageId":"427","endLine":21,"endColumn":18},{"ruleId":"424","severity":1,"message":"463","line":23,"column":7,"nodeType":"426","messageId":"427","endLine":23,"endColumn":21},{"ruleId":"424","severity":1,"message":"464","line":2,"column":8,"nodeType":"426","messageId":"427","endLine":2,"endColumn":12},{"ruleId":"465","severity":1,"message":"466","line":14,"column":9,"nodeType":"431","endLine":14,"endColumn":46},{"ruleId":"467","severity":1,"message":"468","line":14,"column":9,"nodeType":"431","endLine":14,"endColumn":46},{"ruleId":"424","severity":1,"message":"469","line":3,"column":10,"nodeType":"426","messageId":"427","endLine":3,"endColumn":21},{"ruleId":"424","severity":1,"message":"470","line":3,"column":23,"nodeType":"426","messageId":"427","endLine":3,"endColumn":31},{"ruleId":"424","severity":1,"message":"471","line":22,"column":9,"nodeType":"426","messageId":"427","endLine":22,"endColumn":28},{"ruleId":"467","severity":1,"message":"472","line":27,"column":24,"nodeType":"431","endLine":27,"endColumn":127},{"ruleId":"467","severity":1,"message":"472","line":48,"column":22,"nodeType":"431","endLine":48,"endColumn":135},{"ruleId":"467","severity":1,"message":"472","line":50,"column":24,"nodeType":"431","endLine":50,"endColumn":136},{"ruleId":"467","severity":1,"message":"472","line":71,"column":22,"nodeType":"431","endLine":71,"endColumn":142},{"ruleId":"467","severity":1,"message":"472","line":73,"column":24,"nodeType":"431","endLine":73,"endColumn":131},{"ruleId":"467","severity":1,"message":"472","line":94,"column":22,"nodeType":"431","endLine":94,"endColumn":137},{"ruleId":"467","severity":1,"message":"472","line":96,"column":24,"nodeType":"431","endLine":96,"endColumn":134},{"ruleId":"465","severity":1,"message":"466","line":23,"column":15,"nodeType":"431","endLine":23,"endColumn":41},{"ruleId":"467","severity":1,"message":"472","line":32,"column":17,"nodeType":"431","endLine":32,"endColumn":43},{"ruleId":"467","severity":1,"message":"472","line":34,"column":17,"nodeType":"431","endLine":34,"endColumn":43},{"ruleId":"467","severity":1,"message":"472","line":36,"column":17,"nodeType":"431","endLine":36,"endColumn":43},{"ruleId":"467","severity":1,"message":"472","line":39,"column":17,"nodeType":"431","endLine":39,"endColumn":43},{"ruleId":"467","severity":1,"message":"472","line":41,"column":17,"nodeType":"431","endLine":41,"endColumn":43},{"ruleId":"467","severity":1,"message":"472","line":43,"column":17,"nodeType":"431","endLine":43,"endColumn":43},{"ruleId":"424","severity":1,"message":"473","line":3,"column":10,"nodeType":"426","messageId":"427","endLine":3,"endColumn":14},{"ruleId":"424","severity":1,"message":"453","line":7,"column":10,"nodeType":"426","messageId":"427","endLine":7,"endColumn":19},{"ruleId":"424","severity":1,"message":"454","line":7,"column":21,"nodeType":"426","messageId":"427","endLine":7,"endColumn":27},{"ruleId":"424","severity":1,"message":"455","line":7,"column":29,"nodeType":"426","messageId":"427","endLine":7,"endColumn":36},{"ruleId":"424","severity":1,"message":"456","line":7,"column":38,"nodeType":"426","messageId":"427","endLine":7,"endColumn":42},{"ruleId":"424","severity":1,"message":"457","line":7,"column":44,"nodeType":"426","messageId":"427","endLine":7,"endColumn":52},{"ruleId":"424","severity":1,"message":"458","line":7,"column":54,"nodeType":"426","messageId":"427","endLine":7,"endColumn":63},{"ruleId":"424","severity":1,"message":"459","line":7,"column":65,"nodeType":"426","messageId":"427","endLine":7,"endColumn":73},{"ruleId":"424","severity":1,"message":"474","line":9,"column":3,"nodeType":"426","messageId":"427","endLine":9,"endColumn":16},{"ruleId":"424","severity":1,"message":"460","line":10,"column":3,"nodeType":"426","messageId":"427","endLine":10,"endColumn":24},{"ruleId":"424","severity":1,"message":"461","line":11,"column":3,"nodeType":"426","messageId":"427","endLine":11,"endColumn":22},{"ruleId":"434","severity":1,"message":"435","line":21,"column":13,"nodeType":"431","endLine":21,"endColumn":17},{"ruleId":"475","severity":1,"message":"476","line":33,"column":37,"nodeType":"477","endLine":33,"endColumn":52},{"ruleId":"475","severity":1,"message":"476","line":39,"column":37,"nodeType":"477","endLine":39,"endColumn":52},{"ruleId":"420","replacedBy":"478"},{"ruleId":"422","replacedBy":"479"},{"ruleId":"424","severity":1,"message":"480","line":3,"column":8,"nodeType":"426","messageId":"427","endLine":3,"endColumn":17},{"ruleId":"424","severity":1,"message":"433","line":4,"column":8,"nodeType":"426","messageId":"427","endLine":4,"endColumn":14},{"ruleId":"424","severity":1,"message":"438","line":7,"column":8,"nodeType":"426","messageId":"427","endLine":7,"endColumn":16},{"ruleId":"424","severity":1,"message":"441","line":10,"column":8,"nodeType":"426","messageId":"427","endLine":10,"endColumn":20},{"ruleId":"424","severity":1,"message":"442","line":11,"column":8,"nodeType":"426","messageId":"427","endLine":11,"endColumn":16},{"ruleId":"424","severity":1,"message":"443","line":12,"column":8,"nodeType":"426","messageId":"427","endLine":12,"endColumn":14},{"ruleId":"424","severity":1,"message":"447","line":14,"column":8,"nodeType":"426","messageId":"427","endLine":14,"endColumn":13},{"ruleId":"424","severity":1,"message":"473","line":15,"column":10,"nodeType":"426","messageId":"427","endLine":15,"endColumn":14},{"ruleId":"424","severity":1,"message":"425","line":16,"column":10,"nodeType":"426","messageId":"427","endLine":16,"endColumn":25},{"ruleId":"424","severity":1,"message":"451","line":17,"column":10,"nodeType":"426","messageId":"427","endLine":17,"endColumn":18},{"ruleId":"424","severity":1,"message":"452","line":18,"column":10,"nodeType":"426","messageId":"427","endLine":18,"endColumn":20},{"ruleId":"424","severity":1,"message":"453","line":19,"column":10,"nodeType":"426","messageId":"427","endLine":19,"endColumn":19},{"ruleId":"424","severity":1,"message":"454","line":19,"column":21,"nodeType":"426","messageId":"427","endLine":19,"endColumn":27},{"ruleId":"424","severity":1,"message":"455","line":19,"column":29,"nodeType":"426","messageId":"427","endLine":19,"endColumn":36},{"ruleId":"424","severity":1,"message":"456","line":19,"column":38,"nodeType":"426","messageId":"427","endLine":19,"endColumn":42},{"ruleId":"424","severity":1,"message":"457","line":19,"column":44,"nodeType":"426","messageId":"427","endLine":19,"endColumn":52},{"ruleId":"424","severity":1,"message":"458","line":19,"column":54,"nodeType":"426","messageId":"427","endLine":19,"endColumn":63},{"ruleId":"424","severity":1,"message":"459","line":19,"column":65,"nodeType":"426","messageId":"427","endLine":19,"endColumn":73},{"ruleId":"424","severity":1,"message":"474","line":21,"column":3,"nodeType":"426","messageId":"427","endLine":21,"endColumn":16},{"ruleId":"424","severity":1,"message":"460","line":22,"column":3,"nodeType":"426","messageId":"427","endLine":22,"endColumn":24},{"ruleId":"424","severity":1,"message":"461","line":23,"column":3,"nodeType":"426","messageId":"427","endLine":23,"endColumn":22},{"ruleId":"424","severity":1,"message":"448","line":26,"column":9,"nodeType":"426","messageId":"427","endLine":26,"endColumn":22},{"ruleId":"424","severity":1,"message":"449","line":3,"column":3,"nodeType":"426","messageId":"427","endLine":3,"endColumn":8},{"ruleId":"424","severity":1,"message":"481","line":4,"column":3,"nodeType":"426","messageId":"427","endLine":4,"endColumn":10},{"ruleId":"424","severity":1,"message":"450","line":5,"column":3,"nodeType":"426","messageId":"427","endLine":5,"endColumn":9},{"ruleId":"424","severity":1,"message":"482","line":8,"column":8,"nodeType":"426","messageId":"427","endLine":8,"endColumn":12},{"ruleId":"424","severity":1,"message":"483","line":9,"column":8,"nodeType":"426","messageId":"427","endLine":9,"endColumn":14},{"ruleId":"420","replacedBy":"421"},{"ruleId":"422","replacedBy":"423"},{"ruleId":"424","severity":1,"message":"432","line":4,"column":10,"nodeType":"426","messageId":"427","endLine":4,"endColumn":18},{"ruleId":"424","severity":1,"message":"425","line":5,"column":10,"nodeType":"426","messageId":"427","endLine":5,"endColumn":25},{"ruleId":"424","severity":1,"message":"428","line":6,"column":9,"nodeType":"426","messageId":"427","endLine":6,"endColumn":21},{"ruleId":"424","severity":1,"message":"433","line":7,"column":8,"nodeType":"426","messageId":"427","endLine":7,"endColumn":14},{"ruleId":"424","severity":1,"message":"484","line":6,"column":7,"nodeType":"426","messageId":"427","endLine":6,"endColumn":10},{"ruleId":"485","severity":1,"message":"486","line":16,"column":18,"nodeType":"487","messageId":"488","endLine":16,"endColumn":20},{"ruleId":"485","severity":1,"message":"486","line":17,"column":17,"nodeType":"487","messageId":"488","endLine":17,"endColumn":19},{"ruleId":"485","severity":1,"message":"486","line":18,"column":20,"nodeType":"487","messageId":"488","endLine":18,"endColumn":22},{"ruleId":"485","severity":1,"message":"486","line":25,"column":19,"nodeType":"487","messageId":"488","endLine":25,"endColumn":21},{"ruleId":"424","severity":1,"message":"489","line":1,"column":7,"nodeType":"426","messageId":"427","endLine":1,"endColumn":11},{"ruleId":"485","severity":1,"message":"486","line":1,"column":5676,"nodeType":"487","messageId":"488","endLine":1,"endColumn":5678},{"ruleId":"485","severity":1,"message":"486","line":1,"column":6572,"nodeType":"487","messageId":"488","endLine":1,"endColumn":6574},{"ruleId":"485","severity":1,"message":"486","line":1,"column":7243,"nodeType":"487","messageId":"488","endLine":1,"endColumn":7245},{"ruleId":"485","severity":1,"message":"490","line":1,"column":7301,"nodeType":"487","messageId":"488","endLine":1,"endColumn":7303},{"ruleId":"485","severity":1,"message":"490","line":1,"column":7436,"nodeType":"487","messageId":"488","endLine":1,"endColumn":7438},{"ruleId":"485","severity":1,"message":"490","line":1,"column":7455,"nodeType":"487","messageId":"488","endLine":1,"endColumn":7457},{"ruleId":"485","severity":1,"message":"490","line":1,"column":8369,"nodeType":"487","messageId":"488","endLine":1,"endColumn":8371},{"ruleId":"485","severity":1,"message":"490","line":1,"column":8400,"nodeType":"487","messageId":"488","endLine":1,"endColumn":8402},{"ruleId":"485","severity":1,"message":"490","line":1,"column":9890,"nodeType":"487","messageId":"488","endLine":1,"endColumn":9892},{"ruleId":"485","severity":1,"message":"490","line":1,"column":10062,"nodeType":"487","messageId":"488","endLine":1,"endColumn":10064},{"ruleId":"485","severity":1,"message":"490","line":1,"column":10258,"nodeType":"487","messageId":"488","endLine":1,"endColumn":10260},{"ruleId":"485","severity":1,"message":"490","line":1,"column":10349,"nodeType":"487","messageId":"488","endLine":1,"endColumn":10351},{"ruleId":"485","severity":1,"message":"490","line":1,"column":11888,"nodeType":"487","messageId":"488","endLine":1,"endColumn":11890},{"ruleId":"424","severity":1,"message":"491","line":1,"column":12104,"nodeType":"426","messageId":"427","endLine":1,"endColumn":12114},{"ruleId":"424","severity":1,"message":"492","line":1,"column":12409,"nodeType":"426","messageId":"427","endLine":1,"endColumn":12419},{"ruleId":"493","severity":2,"message":"494","line":1,"column":13442,"nodeType":"426","messageId":"495","endLine":1,"endColumn":13452},{"ruleId":"424","severity":1,"message":"496","line":1,"column":13492,"nodeType":"426","messageId":"427","endLine":1,"endColumn":13502},{"ruleId":"424","severity":1,"message":"497","line":1,"column":13709,"nodeType":"426","messageId":"427","endLine":1,"endColumn":13726},{"ruleId":"424","severity":1,"message":"498","line":1,"column":13933,"nodeType":"426","messageId":"427","endLine":1,"endColumn":13945},{"ruleId":"485","severity":1,"message":"490","line":1,"column":14094,"nodeType":"487","messageId":"488","endLine":1,"endColumn":14096},{"ruleId":"485","severity":1,"message":"490","line":1,"column":14251,"nodeType":"487","messageId":"488","endLine":1,"endColumn":14253},{"ruleId":"485","severity":1,"message":"490","line":1,"column":14441,"nodeType":"487","messageId":"488","endLine":1,"endColumn":14443},{"ruleId":"424","severity":1,"message":"499","line":1,"column":14607,"nodeType":"426","messageId":"427","endLine":1,"endColumn":14620},{"ruleId":"485","severity":1,"message":"490","line":1,"column":14769,"nodeType":"487","messageId":"488","endLine":1,"endColumn":14771},{"ruleId":"424","severity":1,"message":"500","line":8,"column":7,"nodeType":"426","messageId":"427","endLine":8,"endColumn":17},{"ruleId":"485","severity":1,"message":"486","line":41,"column":33,"nodeType":"487","messageId":"488","endLine":41,"endColumn":35},{"ruleId":"485","severity":1,"message":"490","line":47,"column":19,"nodeType":"487","messageId":"488","endLine":47,"endColumn":21},{"ruleId":"424","severity":1,"message":"501","line":1,"column":7,"nodeType":"426","messageId":"427","endLine":1,"endColumn":14},{"ruleId":"493","severity":2,"message":"502","line":1,"column":23,"nodeType":"426","messageId":"495","endLine":1,"endColumn":26},{"ruleId":"493","severity":2,"message":"503","line":6,"column":24,"nodeType":"426","messageId":"495","endLine":6,"endColumn":28},{"ruleId":"485","severity":1,"message":"486","line":60,"column":22,"nodeType":"487","messageId":"488","endLine":60,"endColumn":24},{"ruleId":"485","severity":1,"message":"486","line":102,"column":21,"nodeType":"487","messageId":"488","endLine":102,"endColumn":23},{"ruleId":"485","severity":1,"message":"490","line":102,"column":41,"nodeType":"487","messageId":"488","endLine":102,"endColumn":43},{"ruleId":"485","severity":1,"message":"486","line":113,"column":21,"nodeType":"487","messageId":"488","endLine":113,"endColumn":23},{"ruleId":"424","severity":1,"message":"504","line":127,"column":13,"nodeType":"426","messageId":"427","endLine":127,"endColumn":15},{"ruleId":"493","severity":2,"message":"505","line":173,"column":9,"nodeType":"426","messageId":"495","endLine":173,"endColumn":12},{"ruleId":"493","severity":2,"message":"506","line":174,"column":9,"nodeType":"426","messageId":"495","endLine":174,"endColumn":12},{"ruleId":"493","severity":2,"message":"507","line":175,"column":9,"nodeType":"426","messageId":"495","endLine":175,"endColumn":12},{"ruleId":"493","severity":2,"message":"505","line":175,"column":15,"nodeType":"426","messageId":"495","endLine":175,"endColumn":18},{"ruleId":"493","severity":2,"message":"508","line":176,"column":9,"nodeType":"426","messageId":"495","endLine":176,"endColumn":12},{"ruleId":"493","severity":2,"message":"506","line":176,"column":15,"nodeType":"426","messageId":"495","endLine":176,"endColumn":18},{"ruleId":"493","severity":2,"message":"505","line":177,"column":23,"nodeType":"426","messageId":"495","endLine":177,"endColumn":26},{"ruleId":"493","severity":2,"message":"506","line":177,"column":28,"nodeType":"426","messageId":"495","endLine":177,"endColumn":31},{"ruleId":"493","severity":2,"message":"507","line":177,"column":33,"nodeType":"426","messageId":"495","endLine":177,"endColumn":36},{"ruleId":"493","severity":2,"message":"508","line":177,"column":38,"nodeType":"426","messageId":"495","endLine":177,"endColumn":41},{"ruleId":"485","severity":1,"message":"490","line":197,"column":32,"nodeType":"487","messageId":"488","endLine":197,"endColumn":34},{"ruleId":"485","severity":1,"message":"490","line":212,"column":32,"nodeType":"487","messageId":"488","endLine":212,"endColumn":34},{"ruleId":"485","severity":1,"message":"486","line":213,"column":34,"nodeType":"487","messageId":"488","endLine":213,"endColumn":36},{"ruleId":"485","severity":1,"message":"490","line":213,"column":56,"nodeType":"487","messageId":"488","endLine":213,"endColumn":58},{"ruleId":"485","severity":1,"message":"490","line":213,"column":87,"nodeType":"487","messageId":"488","endLine":213,"endColumn":89},{"ruleId":"485","severity":1,"message":"490","line":226,"column":32,"nodeType":"487","messageId":"488","endLine":226,"endColumn":34},{"ruleId":"485","severity":1,"message":"490","line":268,"column":19,"nodeType":"487","messageId":"488","endLine":268,"endColumn":21},{"ruleId":"485","severity":1,"message":"490","line":272,"column":19,"nodeType":"487","messageId":"488","endLine":272,"endColumn":21},{"ruleId":"493","severity":2,"message":"503","line":280,"column":24,"nodeType":"426","messageId":"495","endLine":280,"endColumn":28},{"ruleId":"485","severity":1,"message":"490","line":298,"column":23,"nodeType":"487","messageId":"488","endLine":298,"endColumn":25},{"ruleId":"493","severity":2,"message":"509","line":299,"column":31,"nodeType":"426","messageId":"495","endLine":299,"endColumn":41},{"ruleId":"485","severity":1,"message":"490","line":300,"column":30,"nodeType":"487","messageId":"488","endLine":300,"endColumn":32},{"ruleId":"493","severity":2,"message":"510","line":301,"column":31,"nodeType":"426","messageId":"495","endLine":301,"endColumn":41},{"ruleId":"485","severity":1,"message":"490","line":302,"column":30,"nodeType":"487","messageId":"488","endLine":302,"endColumn":32},{"ruleId":"493","severity":2,"message":"511","line":303,"column":31,"nodeType":"426","messageId":"495","endLine":303,"endColumn":41},{"ruleId":"485","severity":1,"message":"490","line":304,"column":30,"nodeType":"487","messageId":"488","endLine":304,"endColumn":32},{"ruleId":"493","severity":2,"message":"512","line":305,"column":31,"nodeType":"426","messageId":"495","endLine":305,"endColumn":48},{"ruleId":"485","severity":1,"message":"490","line":307,"column":30,"nodeType":"487","messageId":"488","endLine":307,"endColumn":32},{"ruleId":"493","severity":2,"message":"513","line":308,"column":31,"nodeType":"426","messageId":"495","endLine":308,"endColumn":43},{"ruleId":"485","severity":1,"message":"490","line":311,"column":30,"nodeType":"487","messageId":"488","endLine":311,"endColumn":32},{"ruleId":"493","severity":2,"message":"514","line":312,"column":31,"nodeType":"426","messageId":"495","endLine":312,"endColumn":45},{"ruleId":"485","severity":1,"message":"490","line":314,"column":30,"nodeType":"487","messageId":"488","endLine":314,"endColumn":32},{"ruleId":"493","severity":2,"message":"515","line":315,"column":31,"nodeType":"426","messageId":"495","endLine":315,"endColumn":44},{"ruleId":"485","severity":1,"message":"490","line":318,"column":30,"nodeType":"487","messageId":"488","endLine":318,"endColumn":32},{"ruleId":"493","severity":2,"message":"516","line":319,"column":31,"nodeType":"426","messageId":"495","endLine":319,"endColumn":49},{"ruleId":"485","severity":1,"message":"490","line":330,"column":29,"nodeType":"487","messageId":"488","endLine":330,"endColumn":31},{"ruleId":"485","severity":1,"message":"490","line":331,"column":34,"nodeType":"487","messageId":"488","endLine":331,"endColumn":36},{"ruleId":"485","severity":1,"message":"490","line":332,"column":34,"nodeType":"487","messageId":"488","endLine":332,"endColumn":36},{"ruleId":"485","severity":1,"message":"490","line":333,"column":34,"nodeType":"487","messageId":"488","endLine":333,"endColumn":36},{"ruleId":"424","severity":1,"message":"517","line":338,"column":13,"nodeType":"426","messageId":"427","endLine":338,"endColumn":23},{"ruleId":"485","severity":1,"message":"490","line":343,"column":34,"nodeType":"487","messageId":"488","endLine":343,"endColumn":36},{"ruleId":"485","severity":1,"message":"490","line":345,"column":39,"nodeType":"487","messageId":"488","endLine":345,"endColumn":41},{"ruleId":"485","severity":1,"message":"490","line":346,"column":38,"nodeType":"487","messageId":"488","endLine":346,"endColumn":40},{"ruleId":"493","severity":2,"message":"518","line":416,"column":151,"nodeType":"426","messageId":"495","endLine":416,"endColumn":159},{"ruleId":"493","severity":2,"message":"518","line":417,"column":150,"nodeType":"426","messageId":"495","endLine":417,"endColumn":158},{"ruleId":"493","severity":2,"message":"518","line":462,"column":1,"nodeType":"426","messageId":"495","endLine":462,"endColumn":9},{"ruleId":"485","severity":1,"message":"490","line":464,"column":14,"nodeType":"487","messageId":"488","endLine":464,"endColumn":16},{"ruleId":"493","severity":2,"message":"514","line":471,"column":29,"nodeType":"426","messageId":"495","endLine":471,"endColumn":43},{"ruleId":"493","severity":2,"message":"513","line":473,"column":30,"nodeType":"426","messageId":"495","endLine":473,"endColumn":42},{"ruleId":"493","severity":2,"message":"519","line":487,"column":9,"nodeType":"426","messageId":"495","endLine":487,"endColumn":11},{"ruleId":"424","severity":1,"message":"520","line":490,"column":13,"nodeType":"426","messageId":"427","endLine":490,"endColumn":25},{"ruleId":"493","severity":2,"message":"521","line":491,"column":9,"nodeType":"426","messageId":"495","endLine":491,"endColumn":11},{"ruleId":"493","severity":2,"message":"521","line":492,"column":41,"nodeType":"426","messageId":"495","endLine":492,"endColumn":43},{"ruleId":"493","severity":2,"message":"519","line":492,"column":44,"nodeType":"426","messageId":"495","endLine":492,"endColumn":46},{"ruleId":"493","severity":2,"message":"519","line":495,"column":9,"nodeType":"426","messageId":"495","endLine":495,"endColumn":11},{"ruleId":"424","severity":1,"message":"522","line":498,"column":13,"nodeType":"426","messageId":"427","endLine":498,"endColumn":24},{"ruleId":"493","severity":2,"message":"521","line":499,"column":9,"nodeType":"426","messageId":"495","endLine":499,"endColumn":11},{"ruleId":"493","severity":2,"message":"521","line":500,"column":40,"nodeType":"426","messageId":"495","endLine":500,"endColumn":42},{"ruleId":"493","severity":2,"message":"519","line":500,"column":43,"nodeType":"426","messageId":"495","endLine":500,"endColumn":45},{"ruleId":"485","severity":1,"message":"490","line":509,"column":32,"nodeType":"487","messageId":"488","endLine":509,"endColumn":34},{"ruleId":"485","severity":1,"message":"490","line":514,"column":24,"nodeType":"487","messageId":"488","endLine":514,"endColumn":26},{"ruleId":"523","severity":1,"message":"524","line":529,"column":9,"nodeType":"525","messageId":"526","endLine":529,"endColumn":37},{"ruleId":"424","severity":1,"message":"527","line":5,"column":7,"nodeType":"426","messageId":"427","endLine":5,"endColumn":21},{"ruleId":"485","severity":1,"message":"490","line":35,"column":16,"nodeType":"487","messageId":"488","endLine":35,"endColumn":18},{"ruleId":"485","severity":1,"message":"490","line":35,"column":28,"nodeType":"487","messageId":"488","endLine":35,"endColumn":30},{"ruleId":"485","severity":1,"message":"490","line":59,"column":35,"nodeType":"487","messageId":"488","endLine":59,"endColumn":37},{"ruleId":"485","severity":1,"message":"490","line":62,"column":42,"nodeType":"487","messageId":"488","endLine":62,"endColumn":44},{"ruleId":"485","severity":1,"message":"490","line":65,"column":42,"nodeType":"487","messageId":"488","endLine":65,"endColumn":44},{"ruleId":"485","severity":1,"message":"490","line":70,"column":42,"nodeType":"487","messageId":"488","endLine":70,"endColumn":44},{"ruleId":"485","severity":1,"message":"490","line":79,"column":41,"nodeType":"487","messageId":"488","endLine":79,"endColumn":43},{"ruleId":"485","severity":1,"message":"486","line":79,"column":103,"nodeType":"487","messageId":"488","endLine":79,"endColumn":105},{"ruleId":"485","severity":1,"message":"486","line":93,"column":32,"nodeType":"487","messageId":"488","endLine":93,"endColumn":34},{"ruleId":"485","severity":1,"message":"486","line":134,"column":37,"nodeType":"487","messageId":"488","endLine":134,"endColumn":39},{"ruleId":"485","severity":1,"message":"486","line":138,"column":83,"nodeType":"487","messageId":"488","endLine":138,"endColumn":85},{"ruleId":"485","severity":1,"message":"486","line":177,"column":30,"nodeType":"487","messageId":"488","endLine":177,"endColumn":32},{"ruleId":"485","severity":1,"message":"490","line":266,"column":25,"nodeType":"487","messageId":"488","endLine":266,"endColumn":27},{"ruleId":"485","severity":1,"message":"490","line":266,"column":53,"nodeType":"487","messageId":"488","endLine":266,"endColumn":55},{"ruleId":"485","severity":1,"message":"490","line":288,"column":24,"nodeType":"487","messageId":"488","endLine":288,"endColumn":26},{"ruleId":"485","severity":1,"message":"490","line":288,"column":54,"nodeType":"487","messageId":"488","endLine":288,"endColumn":56},{"ruleId":"485","severity":1,"message":"490","line":308,"column":19,"nodeType":"487","messageId":"488","endLine":308,"endColumn":21},{"ruleId":"485","severity":1,"message":"490","line":308,"column":41,"nodeType":"487","messageId":"488","endLine":308,"endColumn":43},{"ruleId":"424","severity":1,"message":"528","line":5,"column":7,"nodeType":"426","messageId":"427","endLine":5,"endColumn":25},{"ruleId":"529","severity":2,"message":"530","line":32,"column":9,"nodeType":"531","messageId":"532","endLine":32,"endColumn":26},{"ruleId":"485","severity":1,"message":"490","line":38,"column":16,"nodeType":"487","messageId":"488","endLine":38,"endColumn":18},{"ruleId":"485","severity":1,"message":"490","line":38,"column":28,"nodeType":"487","messageId":"488","endLine":38,"endColumn":30},{"ruleId":"485","severity":1,"message":"490","line":62,"column":35,"nodeType":"487","messageId":"488","endLine":62,"endColumn":37},{"ruleId":"485","severity":1,"message":"490","line":65,"column":42,"nodeType":"487","messageId":"488","endLine":65,"endColumn":44},{"ruleId":"485","severity":1,"message":"490","line":68,"column":42,"nodeType":"487","messageId":"488","endLine":68,"endColumn":44},{"ruleId":"485","severity":1,"message":"490","line":73,"column":42,"nodeType":"487","messageId":"488","endLine":73,"endColumn":44},{"ruleId":"485","severity":1,"message":"490","line":80,"column":37,"nodeType":"487","messageId":"488","endLine":80,"endColumn":39},{"ruleId":"485","severity":1,"message":"486","line":80,"column":91,"nodeType":"487","messageId":"488","endLine":80,"endColumn":93},{"ruleId":"485","severity":1,"message":"490","line":96,"column":23,"nodeType":"487","messageId":"488","endLine":96,"endColumn":25},{"ruleId":"485","severity":1,"message":"490","line":96,"column":41,"nodeType":"487","messageId":"488","endLine":96,"endColumn":43},{"ruleId":"485","severity":1,"message":"486","line":140,"column":37,"nodeType":"487","messageId":"488","endLine":140,"endColumn":39},{"ruleId":"485","severity":1,"message":"486","line":144,"column":83,"nodeType":"487","messageId":"488","endLine":144,"endColumn":85},{"ruleId":"485","severity":1,"message":"486","line":177,"column":29,"nodeType":"487","messageId":"488","endLine":177,"endColumn":31},{"ruleId":"485","severity":1,"message":"486","line":177,"column":77,"nodeType":"487","messageId":"488","endLine":177,"endColumn":79},{"ruleId":"485","severity":1,"message":"486","line":177,"column":125,"nodeType":"487","messageId":"488","endLine":177,"endColumn":127},{"ruleId":"485","severity":1,"message":"490","line":196,"column":29,"nodeType":"487","messageId":"488","endLine":196,"endColumn":31},{"ruleId":"533","severity":1,"message":"534","line":230,"column":17,"nodeType":"426","messageId":"535","endLine":230,"endColumn":28},{"ruleId":"485","severity":1,"message":"490","line":242,"column":31,"nodeType":"487","messageId":"488","endLine":242,"endColumn":33},{"ruleId":"485","severity":1,"message":"490","line":242,"column":53,"nodeType":"487","messageId":"488","endLine":242,"endColumn":55},{"ruleId":"485","severity":1,"message":"490","line":252,"column":39,"nodeType":"487","messageId":"488","endLine":252,"endColumn":41},{"ruleId":"485","severity":1,"message":"490","line":252,"column":63,"nodeType":"487","messageId":"488","endLine":252,"endColumn":65},{"ruleId":"485","severity":1,"message":"490","line":253,"column":40,"nodeType":"487","messageId":"488","endLine":253,"endColumn":42},{"ruleId":"485","severity":1,"message":"490","line":253,"column":72,"nodeType":"487","messageId":"488","endLine":253,"endColumn":74},{"ruleId":"485","severity":1,"message":"490","line":267,"column":44,"nodeType":"487","messageId":"488","endLine":267,"endColumn":46},{"ruleId":"485","severity":1,"message":"490","line":267,"column":76,"nodeType":"487","messageId":"488","endLine":267,"endColumn":78},{"ruleId":"485","severity":1,"message":"486","line":291,"column":32,"nodeType":"487","messageId":"488","endLine":291,"endColumn":34},{"ruleId":"485","severity":1,"message":"486","line":291,"column":54,"nodeType":"487","messageId":"488","endLine":291,"endColumn":56},{"ruleId":"485","severity":1,"message":"490","line":301,"column":39,"nodeType":"487","messageId":"488","endLine":301,"endColumn":41},{"ruleId":"485","severity":1,"message":"490","line":301,"column":63,"nodeType":"487","messageId":"488","endLine":301,"endColumn":65},{"ruleId":"485","severity":1,"message":"490","line":338,"column":23,"nodeType":"487","messageId":"488","endLine":338,"endColumn":25},{"ruleId":"485","severity":1,"message":"490","line":346,"column":28,"nodeType":"487","messageId":"488","endLine":346,"endColumn":30},{"ruleId":"485","severity":1,"message":"490","line":372,"column":43,"nodeType":"487","messageId":"488","endLine":372,"endColumn":45},{"ruleId":"485","severity":1,"message":"490","line":372,"column":89,"nodeType":"487","messageId":"488","endLine":372,"endColumn":91},{"ruleId":"533","severity":1,"message":"536","line":377,"column":18,"nodeType":"426","messageId":"535","endLine":377,"endColumn":19},{"ruleId":"485","severity":1,"message":"490","line":428,"column":24,"nodeType":"487","messageId":"488","endLine":428,"endColumn":26},{"ruleId":"485","severity":1,"message":"490","line":428,"column":54,"nodeType":"487","messageId":"488","endLine":428,"endColumn":56},{"ruleId":"485","severity":1,"message":"490","line":448,"column":19,"nodeType":"487","messageId":"488","endLine":448,"endColumn":21},{"ruleId":"485","severity":1,"message":"490","line":448,"column":41,"nodeType":"487","messageId":"488","endLine":448,"endColumn":43},"no-native-reassign",["537"],"no-negated-in-lhs",["538"],"no-unused-vars","'FontAwesomeIcon' is defined but never used.","Identifier","unusedVar","'faArrowRight' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Carousel' is defined but never used.","'Navbar' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'Header' is defined but never used.","'AboutMe' is defined but never used.","'Services' is defined but never used.","'Experience' is defined but never used.","'Portfolio' is defined but never used.","'Testimonials' is defined but never used.","'Contacts' is defined but never used.","'Footer' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'fetchData' is defined but never used.","'Typed' is defined but never used.","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'faGithub' is defined but never used.","'faLinkedin' is defined but never used.","'Rectangle' is defined but never used.","'Circle' is defined but never used.","'Ellipse' is defined but never used.","'Line' is defined but never used.","'Polyline' is defined but never used.","'CornerBox' is defined but never used.","'Triangle' is defined but never used.","'AwesomeButtonProgress' is defined but never used.","'AwesomeButtonSocial' is defined but never used.","'CurDisplay' is defined but never used.","'DynamicSection' is defined but never used.","'logo' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'faFacebookF' is defined but never used.","'faGoogle' is defined but never used.","'openPopupboxNetflix' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Link' is defined but never used.","'AwesomeButton' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["537"],["538"],"'Particles' is defined but never used.","'NavLink' is defined but never used.","'Home' is defined but never used.","'Blokus' is defined but never used.","'GUI' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Grid' is defined but never used.","Expected '===' and instead saw '=='.","'Search_BFS' is defined but never used.","'Search_DFS' is defined but never used.","no-undef","'BinaryHeap' is not defined.","undef","'Search_UCS' is defined but never used.","'Search_GreedyBeFS' is defined but never used.","'Search_AStar' is defined but never used.","'Search_WAStar' is defined but never used.","'BinaryHeap' is defined but never used.","'GridGUI' is defined but never used.","'GUI' is not defined.","'Grid' is not defined.","'ms' is assigned a value but never used.","'ox1' is not defined.","'oy1' is not defined.","'ox2' is not defined.","'oy2' is not defined.","'Search_BFS' is not defined.","'Search_DFS' is not defined.","'Search_UCS' is not defined.","'Search_GreedyBeFS' is not defined.","'Search_AStar' is not defined.","'Search_Student' is not defined.","'Search_WAStar' is not defined.","'Search_Student_JPS' is not defined.","'algorithms' is assigned a value but never used.","'RunTests' is not defined.","'t0' is not defined.","'solutionPath' is assigned a value but never used.","'t1' is not defined.","'studentPath' is assigned a value but never used.","no-implied-eval","Implied eval. Consider passing a function instead of a string.","CallExpression","impliedEval","'Search_Student' is defined but never used.","'Search_Student_JPS' is defined but never used.","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","no-redeclare","'tempActions' is already defined.","redeclared","'i' is already defined.","no-global-assign","no-unsafe-negation"]